{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cmwaters/rook/cmwaters.rook.rook/module/types/rook/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/cmwaters/rook/cmwaters.rook.rook/module/types/rook/state.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cmwaters/rook/cmwaters.rook.rook/module/rest.js","webpack:///./src/store/generated/cmwaters/rook/cmwaters.rook.rook/module/index.js","webpack:///./src/store/generated/cmwaters/rook/cmwaters.rook.rook/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cmwaters/rook/cmwaters.rook.rook/module/types/rook/config.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cmwaters/rook/cmwaters.rook.rook/module/types/rook/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","String","fromCharCode","join","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","string","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","uint64","Direction","Landscape","Settlement","directionFromJSON","LEFT","RIGHT","UP","DOWN","UNRECOGNIZED","directionToJSON","landscapeFromJSON","UNKNOWN","PLAINS","FOREST","MOUNTAINS","LAKE","landscapeToJSON","settlementFromJSON","NONE","TOWN","CITY","CAPITAL","LUMBERMILL","QUARRY","FARM","ROOK","settlementToJSON","baseMap","width","Map","tiles","Tile","baseTile","landscape","faction","baseFaction","Faction","resources","ResourceSet","entries","population","forEach","Faction_PopulationEntry","settlements","Faction_SettlementsEntry","entry2","entry3","k","baseFaction_PopulationEntry","baseFaction_SettlementsEntry","basePosition","x","y","Position","baseResourceSet","food","stone","wood","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","baseGame","step","Game","players","Game_PlayersEntry","config","GameConfig","entry1","baseGame_PlayersEntry","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","description","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","V1Order","V1State","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","path","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryChannels","method","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","types","MsgChannelOpenTry","MsgChannelCloseInit","MsgChannelOpenAck","MsgChannelOpenConfirm","MsgTimeoutOnClose","MsgChannelCloseConfirm","MsgChannelOpenInit","MsgRecvPacket","MsgTimeout","MsgAcknowledgement","MissingWalletError","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgChannelOpenTry","msgChannelCloseInit","msgChannelOpenAck","msgChannelOpenConfirm","msgTimeoutOnClose","msgChannelCloseConfirm","msgChannelOpenInit","msgRecvPacket","msgTimeout","msgAcknowledgement","queryClient","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","field","V1Beta1BondStatus","getDefaultState","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","_Structure","PacketSequence","_Subscriptions","Set","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","action","payload","SpVuexError","QueryChannel","options","subscribe","all","channel_id","port_id","QueryChannels","pagination","nextKey","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","revision_number","revision_height","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenTry","msg","sendMsgChannelCloseInit","sendMsgChannelOpenAck","sendMsgChannelOpenConfirm","sendMsgTimeoutOnClose","sendMsgChannelCloseConfirm","sendMsgChannelOpenInit","sendMsgRecvPacket","sendMsgTimeout","sendMsgAcknowledgement","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidators","queryDelegatorValidator","validatorAddr","queryHistoricalInfo","queryParams","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgUndelegate","msgCreateValidator","msgDelegate","msgBeginRedelegate","msgEditValidator","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidators","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidators","getDelegatorValidator","getHistoricalInfo","getPool","getParams","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidators","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","QueryParams","sendMsgUndelegate","sendMsgCreateValidator","sendMsgDelegate","sendMsgBeginRedelegate","sendMsgEditValidator","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgWithdrawValidatorCommission","msgSetWithdrawAddress","msgFundCommunityPool","msgWithdrawDelegatorReward","V1Beta1ProposalStatus","V1Beta1VoteOption","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgSetWithdrawAddress","sendMsgFundCommunityPool","sendMsgWithdrawDelegatorReward","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgVote","MsgDeposit","MsgSubmitProposal","msgVote","msgDeposit","msgSubmitProposal","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgVote","sendMsgDeposit","sendMsgSubmitProposal","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenTry","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenAck","msgConnectionOpenTry","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenAck","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","client_id","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenTry","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenAck","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","MsgUnjail","msgUnjail","SigningInfo","SigningInfos","ValidatorMissedBlocks","MissedBlock","ValidatorSigningInfo","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","RookDirection","RookLandscape","RookSettlement","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","queryGame","id","MsgBuild","MsgCreate","MsgMove","msgBuild","msgCreate","msgMove","MapConfig","InitializationConfig","getGame","QueryGame","sendMsgBuild","sendMsgCreate","sendMsgMove","baseCoin","denom","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","queryAllBalances","queryBalance","queryDenomsMetadata","queryDenomMetadata","queryTotalSupply","querySupplyOf","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgSend","msgMultiSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryDenomMetadata","QueryDenomsMetadata","sendMsgSend","sendMsgMultiSend","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpdateClient","msgSubmitMisbehaviour","msgCreateClient","msgUpgradeClient","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","QueryClientStates","QueryConsensusState","QueryConsensusStates","QueryClientParams","sendMsgUpdateClient","sendMsgSubmitMisbehaviour","sendMsgCreateClient","sendMsgUpgradeClient","MsgCreateVestingAccount","msgCreateVestingAccount","sendMsgCreateVestingAccount","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","CosmosCosmosSdkIbcCoreChannelV1","load","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkIbcCoreConnectionV1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CmwatersRookCmwatersRookRook","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","modulePath","moduleType","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","globalProperties","_depsLoaded","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","baseGameConfig","initial","baseMapConfig","seed","mountainsDensity","forestDensity","lakeDensity","plainsDensity","baseInitializationConfig","teams","productionRate","Params_ProductionRateEntry","constructionCost","Params_ConstructionCostEntry","baseParams_ProductionRateEntry","baseParams_ConstructionCostEntry","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgMove","creator","gameId","direction","position","baseMsgBuild","settlement","baseMsgCreate","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.99ed0d2c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseMsgCreateClient = { signer: '' };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpdateClient = { clientId: '', signer: '' };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpgradeClient = { clientId: '', signer: '' };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviour = { clientId: '', signer: '' };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'CreateClient', data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpdateClient', data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpgradeClient', data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'SubmitMisbehaviour', data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { Header } from '../../tendermint/types/types';\nimport { ProofOps } from '../../tendermint/crypto/proof';\nimport { EvidenceParams, ValidatorParams, VersionParams } from '../../tendermint/types/params';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.abci';\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NEW':\n            return CheckTxType.NEW;\n        case 1:\n        case 'RECHECK':\n            return CheckTxType.RECHECK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return 'NEW';\n        case CheckTxType.RECHECK:\n            return 'RECHECK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case 'DUPLICATE_VOTE':\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case 'LIGHT_CLIENT_ATTACK':\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return 'UNKNOWN';\n        case EvidenceType.DUPLICATE_VOTE:\n            return 'DUPLICATE_VOTE';\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return 'LIGHT_CLIENT_ATTACK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case 'REJECT':\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case 'REJECT_FORMAT':\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case 'REJECT_SENDER':\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseOfferSnapshot_Result.ABORT:\n            return 'ABORT';\n        case ResponseOfferSnapshot_Result.REJECT:\n            return 'REJECT';\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return 'REJECT_FORMAT';\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return 'REJECT_SENDER';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case 'RETRY':\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case 'RETRY_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case 'REJECT_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return 'ABORT';\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return 'RETRY';\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return 'RETRY_SNAPSHOT';\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return 'REJECT_SNAPSHOT';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseRequestEcho = { message: '' };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    }\n};\nconst baseRequestInfo = { version: '', blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== '') {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestSetOption = { key: '', value: '' };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseRequestInitChain = { chainId: '', initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestQuery = { path: '', height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    }\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    }\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    }\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: '' };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseResponseException = { error: '' };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== '') {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEcho = { message: '' };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    }\n};\nconst baseResponseInfo = {\n    data: '',\n    version: '',\n    appVersion: 0,\n    lastBlockHeight: 0\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== '') {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseSetOption = { code: 0, log: '', info: '' };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    }\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: '',\n    info: '',\n    index: 0,\n    height: 0,\n    codespace: ''\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: ''\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    }\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => (e ? VoteInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEvent = { type: '' };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    }\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    }\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Echo', data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Flush', data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Info', data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'SetOption', data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'DeliverTx', data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'CheckTx', data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Query', data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Commit', data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'InitChain', data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'BeginBlock', data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'EndBlock', data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ListSnapshots', data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'OfferSnapshot', data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'LoadSnapshotChunk', data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ApplySnapshotChunk', data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cmwaters.rook.rook';\nexport var Direction;\n(function (Direction) {\n    Direction[Direction[\"LEFT\"] = 0] = \"LEFT\";\n    Direction[Direction[\"RIGHT\"] = 1] = \"RIGHT\";\n    Direction[Direction[\"UP\"] = 2] = \"UP\";\n    Direction[Direction[\"DOWN\"] = 3] = \"DOWN\";\n    Direction[Direction[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Direction || (Direction = {}));\nexport function directionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'LEFT':\n            return Direction.LEFT;\n        case 1:\n        case 'RIGHT':\n            return Direction.RIGHT;\n        case 2:\n        case 'UP':\n            return Direction.UP;\n        case 3:\n        case 'DOWN':\n            return Direction.DOWN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Direction.UNRECOGNIZED;\n    }\n}\nexport function directionToJSON(object) {\n    switch (object) {\n        case Direction.LEFT:\n            return 'LEFT';\n        case Direction.RIGHT:\n            return 'RIGHT';\n        case Direction.UP:\n            return 'UP';\n        case Direction.DOWN:\n            return 'DOWN';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var Landscape;\n(function (Landscape) {\n    Landscape[Landscape[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    Landscape[Landscape[\"PLAINS\"] = 1] = \"PLAINS\";\n    Landscape[Landscape[\"FOREST\"] = 2] = \"FOREST\";\n    Landscape[Landscape[\"MOUNTAINS\"] = 3] = \"MOUNTAINS\";\n    Landscape[Landscape[\"LAKE\"] = 4] = \"LAKE\";\n    Landscape[Landscape[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Landscape || (Landscape = {}));\nexport function landscapeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return Landscape.UNKNOWN;\n        case 1:\n        case 'PLAINS':\n            return Landscape.PLAINS;\n        case 2:\n        case 'FOREST':\n            return Landscape.FOREST;\n        case 3:\n        case 'MOUNTAINS':\n            return Landscape.MOUNTAINS;\n        case 4:\n        case 'LAKE':\n            return Landscape.LAKE;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Landscape.UNRECOGNIZED;\n    }\n}\nexport function landscapeToJSON(object) {\n    switch (object) {\n        case Landscape.UNKNOWN:\n            return 'UNKNOWN';\n        case Landscape.PLAINS:\n            return 'PLAINS';\n        case Landscape.FOREST:\n            return 'FOREST';\n        case Landscape.MOUNTAINS:\n            return 'MOUNTAINS';\n        case Landscape.LAKE:\n            return 'LAKE';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var Settlement;\n(function (Settlement) {\n    Settlement[Settlement[\"NONE\"] = 0] = \"NONE\";\n    Settlement[Settlement[\"TOWN\"] = 1] = \"TOWN\";\n    Settlement[Settlement[\"CITY\"] = 2] = \"CITY\";\n    Settlement[Settlement[\"CAPITAL\"] = 3] = \"CAPITAL\";\n    Settlement[Settlement[\"LUMBERMILL\"] = 4] = \"LUMBERMILL\";\n    Settlement[Settlement[\"QUARRY\"] = 5] = \"QUARRY\";\n    Settlement[Settlement[\"FARM\"] = 6] = \"FARM\";\n    Settlement[Settlement[\"ROOK\"] = 7] = \"ROOK\";\n    Settlement[Settlement[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Settlement || (Settlement = {}));\nexport function settlementFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NONE':\n            return Settlement.NONE;\n        case 1:\n        case 'TOWN':\n            return Settlement.TOWN;\n        case 2:\n        case 'CITY':\n            return Settlement.CITY;\n        case 3:\n        case 'CAPITAL':\n            return Settlement.CAPITAL;\n        case 4:\n        case 'LUMBERMILL':\n            return Settlement.LUMBERMILL;\n        case 5:\n        case 'QUARRY':\n            return Settlement.QUARRY;\n        case 6:\n        case 'FARM':\n            return Settlement.FARM;\n        case 7:\n        case 'ROOK':\n            return Settlement.ROOK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Settlement.UNRECOGNIZED;\n    }\n}\nexport function settlementToJSON(object) {\n    switch (object) {\n        case Settlement.NONE:\n            return 'NONE';\n        case Settlement.TOWN:\n            return 'TOWN';\n        case Settlement.CITY:\n            return 'CITY';\n        case Settlement.CAPITAL:\n            return 'CAPITAL';\n        case Settlement.LUMBERMILL:\n            return 'LUMBERMILL';\n        case Settlement.QUARRY:\n            return 'QUARRY';\n        case Settlement.FARM:\n            return 'FARM';\n        case Settlement.ROOK:\n            return 'ROOK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseMap = { width: 0 };\nexport const Map = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.tiles) {\n            Tile.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.width !== 0) {\n            writer.uint32(16).uint32(message.width);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMap };\n        message.tiles = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tiles.push(Tile.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.width = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMap };\n        message.tiles = [];\n        if (object.tiles !== undefined && object.tiles !== null) {\n            for (const e of object.tiles) {\n                message.tiles.push(Tile.fromJSON(e));\n            }\n        }\n        if (object.width !== undefined && object.width !== null) {\n            message.width = Number(object.width);\n        }\n        else {\n            message.width = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.tiles) {\n            obj.tiles = message.tiles.map((e) => (e ? Tile.toJSON(e) : undefined));\n        }\n        else {\n            obj.tiles = [];\n        }\n        message.width !== undefined && (obj.width = message.width);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMap };\n        message.tiles = [];\n        if (object.tiles !== undefined && object.tiles !== null) {\n            for (const e of object.tiles) {\n                message.tiles.push(Tile.fromPartial(e));\n            }\n        }\n        if (object.width !== undefined && object.width !== null) {\n            message.width = object.width;\n        }\n        else {\n            message.width = 0;\n        }\n        return message;\n    }\n};\nconst baseTile = { landscape: 0, faction: '' };\nexport const Tile = {\n    encode(message, writer = Writer.create()) {\n        if (message.landscape !== 0) {\n            writer.uint32(8).int32(message.landscape);\n        }\n        if (message.faction !== '') {\n            writer.uint32(18).string(message.faction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.landscape = reader.int32();\n                    break;\n                case 2:\n                    message.faction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTile };\n        if (object.landscape !== undefined && object.landscape !== null) {\n            message.landscape = landscapeFromJSON(object.landscape);\n        }\n        else {\n            message.landscape = 0;\n        }\n        if (object.faction !== undefined && object.faction !== null) {\n            message.faction = String(object.faction);\n        }\n        else {\n            message.faction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.landscape !== undefined && (obj.landscape = landscapeToJSON(message.landscape));\n        message.faction !== undefined && (obj.faction = message.faction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTile };\n        if (object.landscape !== undefined && object.landscape !== null) {\n            message.landscape = object.landscape;\n        }\n        else {\n            message.landscape = 0;\n        }\n        if (object.faction !== undefined && object.faction !== null) {\n            message.faction = object.faction;\n        }\n        else {\n            message.faction = '';\n        }\n        return message;\n    }\n};\nconst baseFaction = {};\nexport const Faction = {\n    encode(message, writer = Writer.create()) {\n        if (message.resources !== undefined) {\n            ResourceSet.encode(message.resources, writer.uint32(10).fork()).ldelim();\n        }\n        Object.entries(message.population).forEach(([key, value]) => {\n            Faction_PopulationEntry.encode({ key: key, value }, writer.uint32(18).fork()).ldelim();\n        });\n        Object.entries(message.settlements).forEach(([key, value]) => {\n            Faction_SettlementsEntry.encode({ key: key, value }, writer.uint32(26).fork()).ldelim();\n        });\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFaction };\n        message.population = {};\n        message.settlements = {};\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.resources = ResourceSet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    const entry2 = Faction_PopulationEntry.decode(reader, reader.uint32());\n                    if (entry2.value !== undefined) {\n                        message.population[entry2.key] = entry2.value;\n                    }\n                    break;\n                case 3:\n                    const entry3 = Faction_SettlementsEntry.decode(reader, reader.uint32());\n                    if (entry3.value !== undefined) {\n                        message.settlements[entry3.key] = entry3.value;\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFaction };\n        message.population = {};\n        message.settlements = {};\n        if (object.resources !== undefined && object.resources !== null) {\n            message.resources = ResourceSet.fromJSON(object.resources);\n        }\n        else {\n            message.resources = undefined;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            Object.entries(object.population).forEach(([key, value]) => {\n                message.population[Number(key)] = Number(value);\n            });\n        }\n        if (object.settlements !== undefined && object.settlements !== null) {\n            Object.entries(object.settlements).forEach(([key, value]) => {\n                message.settlements[Number(key)] = value;\n            });\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.resources !== undefined && (obj.resources = message.resources ? ResourceSet.toJSON(message.resources) : undefined);\n        obj.population = {};\n        if (message.population) {\n            Object.entries(message.population).forEach(([k, v]) => {\n                obj.population[k] = v;\n            });\n        }\n        obj.settlements = {};\n        if (message.settlements) {\n            Object.entries(message.settlements).forEach(([k, v]) => {\n                obj.settlements[k] = settlementToJSON(v);\n            });\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFaction };\n        message.population = {};\n        message.settlements = {};\n        if (object.resources !== undefined && object.resources !== null) {\n            message.resources = ResourceSet.fromPartial(object.resources);\n        }\n        else {\n            message.resources = undefined;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            Object.entries(object.population).forEach(([key, value]) => {\n                if (value !== undefined) {\n                    message.population[Number(key)] = Number(value);\n                }\n            });\n        }\n        if (object.settlements !== undefined && object.settlements !== null) {\n            Object.entries(object.settlements).forEach(([key, value]) => {\n                if (value !== undefined) {\n                    message.settlements[Number(key)] = value;\n                }\n            });\n        }\n        return message;\n    }\n};\nconst baseFaction_PopulationEntry = { key: 0, value: 0 };\nexport const Faction_PopulationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== 0) {\n            writer.uint32(8).uint32(message.key);\n        }\n        if (message.value !== 0) {\n            writer.uint32(16).uint32(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFaction_PopulationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.uint32();\n                    break;\n                case 2:\n                    message.value = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFaction_PopulationEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = Number(object.key);\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Number(object.value);\n        }\n        else {\n            message.value = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFaction_PopulationEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = 0;\n        }\n        return message;\n    }\n};\nconst baseFaction_SettlementsEntry = { key: 0, value: 0 };\nexport const Faction_SettlementsEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== 0) {\n            writer.uint32(8).uint32(message.key);\n        }\n        if (message.value !== 0) {\n            writer.uint32(16).int32(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFaction_SettlementsEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.uint32();\n                    break;\n                case 2:\n                    message.value = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFaction_SettlementsEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = Number(object.key);\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = settlementFromJSON(object.value);\n        }\n        else {\n            message.value = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = settlementToJSON(message.value));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFaction_SettlementsEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = 0;\n        }\n        return message;\n    }\n};\nconst basePosition = { x: 0, y: 0 };\nexport const Position = {\n    encode(message, writer = Writer.create()) {\n        if (message.x !== 0) {\n            writer.uint32(24).uint32(message.x);\n        }\n        if (message.y !== 0) {\n            writer.uint32(32).uint32(message.y);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePosition };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 3:\n                    message.x = reader.uint32();\n                    break;\n                case 4:\n                    message.y = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePosition };\n        if (object.x !== undefined && object.x !== null) {\n            message.x = Number(object.x);\n        }\n        else {\n            message.x = 0;\n        }\n        if (object.y !== undefined && object.y !== null) {\n            message.y = Number(object.y);\n        }\n        else {\n            message.y = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.x !== undefined && (obj.x = message.x);\n        message.y !== undefined && (obj.y = message.y);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePosition };\n        if (object.x !== undefined && object.x !== null) {\n            message.x = object.x;\n        }\n        else {\n            message.x = 0;\n        }\n        if (object.y !== undefined && object.y !== null) {\n            message.y = object.y;\n        }\n        else {\n            message.y = 0;\n        }\n        return message;\n    }\n};\nconst baseResourceSet = { food: 0, stone: 0, wood: 0, population: 0 };\nexport const ResourceSet = {\n    encode(message, writer = Writer.create()) {\n        if (message.food !== 0) {\n            writer.uint32(8).uint32(message.food);\n        }\n        if (message.stone !== 0) {\n            writer.uint32(16).uint32(message.stone);\n        }\n        if (message.wood !== 0) {\n            writer.uint32(24).uint32(message.wood);\n        }\n        if (message.population !== 0) {\n            writer.uint32(32).uint32(message.population);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResourceSet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.food = reader.uint32();\n                    break;\n                case 2:\n                    message.stone = reader.uint32();\n                    break;\n                case 3:\n                    message.wood = reader.uint32();\n                    break;\n                case 4:\n                    message.population = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResourceSet };\n        if (object.food !== undefined && object.food !== null) {\n            message.food = Number(object.food);\n        }\n        else {\n            message.food = 0;\n        }\n        if (object.stone !== undefined && object.stone !== null) {\n            message.stone = Number(object.stone);\n        }\n        else {\n            message.stone = 0;\n        }\n        if (object.wood !== undefined && object.wood !== null) {\n            message.wood = Number(object.wood);\n        }\n        else {\n            message.wood = 0;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            message.population = Number(object.population);\n        }\n        else {\n            message.population = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.food !== undefined && (obj.food = message.food);\n        message.stone !== undefined && (obj.stone = message.stone);\n        message.wood !== undefined && (obj.wood = message.wood);\n        message.population !== undefined && (obj.population = message.population);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResourceSet };\n        if (object.food !== undefined && object.food !== null) {\n            message.food = object.food;\n        }\n        else {\n            message.food = 0;\n        }\n        if (object.stone !== undefined && object.stone !== null) {\n            message.stone = object.stone;\n        }\n        else {\n            message.stone = 0;\n        }\n        if (object.wood !== undefined && object.wood !== null) {\n            message.wood = object.wood;\n        }\n        else {\n            message.wood = 0;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            message.population = object.population;\n        }\n        else {\n            message.population = 0;\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../google/protobuf/duration';\nexport const protobufPackage = 'tendermint.types';\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    }\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorParams = { pubKeyTypes: '' };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined && (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: '' };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== '') {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { BaseAccount } from '../../../cosmos/auth/v1beta1/auth';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    }\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    }\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Faction, Map } from '../rook/types';\nimport { GameConfig } from '../rook/config';\nexport const protobufPackage = 'cmwaters.rook.rook';\nconst baseGame = { step: 0 };\nexport const Game = {\n    encode(message, writer = Writer.create()) {\n        Object.entries(message.players).forEach(([key, value]) => {\n            Game_PlayersEntry.encode({ key: key, value }, writer.uint32(10).fork()).ldelim();\n        });\n        if (message.config !== undefined) {\n            GameConfig.encode(message.config, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.step !== 0) {\n            writer.uint32(24).uint64(message.step);\n        }\n        if (message.map !== undefined) {\n            Map.encode(message.map, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGame };\n        message.players = {};\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    const entry1 = Game_PlayersEntry.decode(reader, reader.uint32());\n                    if (entry1.value !== undefined) {\n                        message.players[entry1.key] = entry1.value;\n                    }\n                    break;\n                case 2:\n                    message.config = GameConfig.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.step = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.map = Map.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGame };\n        message.players = {};\n        if (object.players !== undefined && object.players !== null) {\n            Object.entries(object.players).forEach(([key, value]) => {\n                message.players[key] = Faction.fromJSON(value);\n            });\n        }\n        if (object.config !== undefined && object.config !== null) {\n            message.config = GameConfig.fromJSON(object.config);\n        }\n        else {\n            message.config = undefined;\n        }\n        if (object.step !== undefined && object.step !== null) {\n            message.step = Number(object.step);\n        }\n        else {\n            message.step = 0;\n        }\n        if (object.map !== undefined && object.map !== null) {\n            message.map = Map.fromJSON(object.map);\n        }\n        else {\n            message.map = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        obj.players = {};\n        if (message.players) {\n            Object.entries(message.players).forEach(([k, v]) => {\n                obj.players[k] = Faction.toJSON(v);\n            });\n        }\n        message.config !== undefined && (obj.config = message.config ? GameConfig.toJSON(message.config) : undefined);\n        message.step !== undefined && (obj.step = message.step);\n        message.map !== undefined && (obj.map = message.map ? Map.toJSON(message.map) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGame };\n        message.players = {};\n        if (object.players !== undefined && object.players !== null) {\n            Object.entries(object.players).forEach(([key, value]) => {\n                if (value !== undefined) {\n                    message.players[key] = Faction.fromPartial(value);\n                }\n            });\n        }\n        if (object.config !== undefined && object.config !== null) {\n            message.config = GameConfig.fromPartial(object.config);\n        }\n        else {\n            message.config = undefined;\n        }\n        if (object.step !== undefined && object.step !== null) {\n            message.step = object.step;\n        }\n        else {\n            message.step = 0;\n        }\n        if (object.map !== undefined && object.map !== null) {\n            message.map = Map.fromPartial(object.map);\n        }\n        else {\n            message.map = undefined;\n        }\n        return message;\n    }\n};\nconst baseGame_PlayersEntry = { key: '' };\nexport const Game_PlayersEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== undefined) {\n            Faction.encode(message.value, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGame_PlayersEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = Faction.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGame_PlayersEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Faction.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value ? Faction.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGame_PlayersEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Faction.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case 4:\n        case 'STATE_CLOSED':\n            return State.STATE_CLOSED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        case State.STATE_CLOSED:\n            return 'STATE_CLOSED';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'ORDER_NONE_UNSPECIFIED':\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case 'ORDER_UNORDERED':\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case 'ORDER_ORDERED':\n            return Order.ORDER_ORDERED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return 'ORDER_NONE_UNSPECIFIED';\n        case Order.ORDER_UNORDERED:\n            return 'ORDER_UNORDERED';\n        case Order.ORDER_ORDERED:\n            return 'ORDER_ORDERED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: ''\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    }\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: '',\n    portId: '',\n    channelId: ''\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== '') {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { portId: '', channelId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: '',\n    sourceChannel: '',\n    destinationPort: '',\n    destinationChannel: '',\n    timeoutTimestamp: 0\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== '') {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== '') {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== '') {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst basePacketState = { portId: '', channelId: '', sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Header } from '../../../tendermint/types/types';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BOND_STATUS_UNSPECIFIED':\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case 'BOND_STATUS_UNBONDED':\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case 'BOND_STATUS_UNBONDING':\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case 'BOND_STATUS_BONDED':\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return 'BOND_STATUS_UNSPECIFIED';\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return 'BOND_STATUS_UNBONDED';\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return 'BOND_STATUS_UNBONDING';\n        case BondStatus.BOND_STATUS_BONDED:\n            return 'BOND_STATUS_BONDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommissionRates = { rate: '', maxRate: '', maxChangeRate: '' };\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== '') {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== '') {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== '') {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    }\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseDescription = {\n    moniker: '',\n    identity: '',\n    website: '',\n    securityContact: '',\n    details: ''\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== '') {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== '') {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== '') {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== '') {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    }\n};\nconst baseValidator = {\n    operatorAddress: '',\n    jailed: false,\n    status: 0,\n    tokens: '',\n    delegatorShares: '',\n    unbondingHeight: 0,\n    minSelfDelegation: ''\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== '') {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== '') {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== '') {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseValAddresses = { addresses: '' };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseDVPair = { delegatorAddress: '', validatorAddress: '' };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDVVTriplet = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegation = {\n    delegatorAddress: '',\n    validatorAddress: '',\n    shares: ''\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== '') {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    balance: ''\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    sharesDst: ''\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== '') {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegation = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: ''\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== '') {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    }\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance ? Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntryResponse = { balance: '' };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePool = { notBondedTokens: '', bondedTokens: '' };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== '') {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== '') {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/channel.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nexport { Channel, IdentifiedChannel, Counterparty, Packet, PacketState, Acknowledgement, PacketSequence };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.channel.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannels(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionChannels(key.connection, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Description, CommissionRates } from '../../../cosmos/staking/v1beta1/staking';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseMsgCreateValidator = {\n    minSelfDelegation: '',\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== '') {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgEditValidator = {\n    validatorAddress: '',\n    commissionRate: '',\n    minSelfDelegation: ''\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== '') {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgDelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    }\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'CreateValidator', data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'EditValidator', data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Delegate', data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'BeginRedelegate', data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Undelegate', data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nexport { LastValidatorPower, HistoricalInfo, CommissionRates, Commission, Description, Validator, ValAddresses, DVPair, DVPairs, DVVTriplet, DVVTriplets, Delegation, UnbondingDelegation, UnbondingDelegationEntry, RedelegationEntry, Redelegation, Params, DelegationResponse, RedelegationEntryResponse, RedelegationResponse, Pool };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.staking.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidators(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRedelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/distribution.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: '' };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    }\n};\nconst baseMsgFundCommunityPool = { depositor: '' };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'SetWithdrawAddress', data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawDelegatorReward', data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawValidatorCommission', data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'FundCommunityPool', data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nexport { Params, ValidatorHistoricalRewards, ValidatorCurrentRewards, ValidatorAccumulatedCommission, ValidatorOutstandingRewards, ValidatorSlashEvent, ValidatorSlashEvents, FeePool, CommunityPoolSpendProposal, DelegatorStartingInfo, DelegationDelegatorReward, CommunityPoolSpendProposalWithDeposit, DelegatorWithdrawInfo, ValidatorOutstandingRewardsRecord, ValidatorAccumulatedCommissionRecord, ValidatorHistoricalRewardsRecord, ValidatorCurrentRewardsRecord, DelegatorStartingInfoRecord, ValidatorSlashEventRecord };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.distribution.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorSlashes(key.validator_address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nexport { TextProposal, Deposit, Proposal, TallyResult, Vote, DepositParams, VotingParams, TallyParams };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.gov.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposals(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVotes(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposits(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/connection.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nexport { ConnectionEnd, IdentifiedConnection, Counterparty, ClientPaths, ConnectionPaths, Version };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.connection.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnections(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseMsgUnjail = { validatorAddr: '' };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== '') {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request('cosmos.slashing.v1beta1.Msg', 'Unjail', data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nexport { SigningInfo, ValidatorMissedBlocks, MissedBlock, ValidatorSigningInfo, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.slashing.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfos(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nexport { FungibleTokenPacketData, DenomTrace, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.applications.transfer.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTraces(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var RookDirection;\n(function (RookDirection) {\n    RookDirection[\"LEFT\"] = \"LEFT\";\n    RookDirection[\"RIGHT\"] = \"RIGHT\";\n    RookDirection[\"UP\"] = \"UP\";\n    RookDirection[\"DOWN\"] = \"DOWN\";\n})(RookDirection || (RookDirection = {}));\nexport var RookLandscape;\n(function (RookLandscape) {\n    RookLandscape[\"UNKNOWN\"] = \"UNKNOWN\";\n    RookLandscape[\"PLAINS\"] = \"PLAINS\";\n    RookLandscape[\"FOREST\"] = \"FOREST\";\n    RookLandscape[\"MOUNTAINS\"] = \"MOUNTAINS\";\n    RookLandscape[\"LAKE\"] = \"LAKE\";\n})(RookLandscape || (RookLandscape = {}));\nexport var RookSettlement;\n(function (RookSettlement) {\n    RookSettlement[\"NONE\"] = \"NONE\";\n    RookSettlement[\"TOWN\"] = \"TOWN\";\n    RookSettlement[\"CITY\"] = \"CITY\";\n    RookSettlement[\"CAPITAL\"] = \"CAPITAL\";\n    RookSettlement[\"LUMBERMILL\"] = \"LUMBERMILL\";\n    RookSettlement[\"QUARRY\"] = \"QUARRY\";\n    RookSettlement[\"FARM\"] = \"FARM\";\n    RookSettlement[\"ROOK\"] = \"ROOK\";\n})(RookSettlement || (RookSettlement = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title rook/config.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGame\n         * @summary Queries a game state by id.\n         * @request GET:/rook/game/{id}\n         */\n        this.queryGame = (id, params = {}) => this.request({\n            path: `/rook/game/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @request GET:/rook/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/rook/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgBuild } from \"./types/rook/tx\";\nimport { MsgCreate } from \"./types/rook/tx\";\nimport { MsgMove } from \"./types/rook/tx\";\nconst types = [\n    [\"/cmwaters.rook.rook.MsgBuild\", MsgBuild],\n    [\"/cmwaters.rook.rook.MsgCreate\", MsgCreate],\n    [\"/cmwaters.rook.rook.MsgMove\", MsgMove],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgBuild: (data) => ({ typeUrl: \"/cmwaters.rook.rook.MsgBuild\", value: data }),\n        msgCreate: (data) => ({ typeUrl: \"/cmwaters.rook.rook.MsgCreate\", value: data }),\n        msgMove: (data) => ({ typeUrl: \"/cmwaters.rook.rook.MsgMove\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { GameConfig } from \"./module/types/rook/config\";\nimport { MapConfig } from \"./module/types/rook/config\";\nimport { InitializationConfig } from \"./module/types/rook/config\";\nimport { Params } from \"./module/types/rook/config\";\nimport { Game } from \"./module/types/rook/state\";\nimport { Map } from \"./module/types/rook/types\";\nimport { Tile } from \"./module/types/rook/types\";\nimport { Faction } from \"./module/types/rook/types\";\nimport { Position } from \"./module/types/rook/types\";\nimport { ResourceSet } from \"./module/types/rook/types\";\nexport { GameConfig, MapConfig, InitializationConfig, Params, Game, Map, Tile, Faction, Position, ResourceSet };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Game: {},\n        Params: {},\n        _Structure: {\n            GameConfig: getStructure(GameConfig.fromPartial({})),\n            MapConfig: getStructure(MapConfig.fromPartial({})),\n            InitializationConfig: getStructure(InitializationConfig.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            Game: getStructure(Game.fromPartial({})),\n            Map: getStructure(Map.fromPartial({})),\n            Tile: getStructure(Tile.fromPartial({})),\n            Faction: getStructure(Faction.fromPartial({})),\n            Position: getStructure(Position.fromPartial({})),\n            ResourceSet: getStructure(ResourceSet.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getGame: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Game[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cmwaters.rook.rook initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryGame({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGame(key.id)).data;\n                commit('QUERY', { query: 'Game', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGame', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGame']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGame', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgBuild({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBuild(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBuild:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBuild:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMove({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMove(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMove:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMove:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgBuild({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBuild(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBuild:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBuild:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMove({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMove(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMove:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMove:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nexport { Coin, DecCoin, IntProto, DecProto };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nexport { TxResponse, ABCIMessageLog, StringEvent, Attribute, GasInfo, Result, SimulationResponse, MsgData, TxMsgData, SearchTxsResult };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.abci.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseSendEnabled = { denom: '', enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    }\n};\nconst baseInput = { address: '' };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseOutput = { address: '' };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDenomUnit = { denom: '', exponent: 0, aliases: '' };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMetadata = { description: '', base: '', display: '' };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== '') {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== '') {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== '') {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Input, Output } from '../../../cosmos/bank/v1beta1/bank';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseMsgSend = { fromAddress: '', toAddress: '' };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    }\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'Send', data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'MultiSend', data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from '../../../cosmos/bank/v1beta1/bank';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBalance = { address: '' };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nexport { Params, SendEnabled, Input, Output, Supply, DenomUnit, Metadata, Balance };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.bank.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllBalances(key.address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomsMetadata(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.crisis.v1beta1';\nconst baseMsgVerifyInvariant = {\n    sender: '',\n    invariantModuleName: '',\n    invariantRoute: ''\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== '') {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== '') {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    }\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.crisis.v1beta1.Msg', 'VerifyInvariant', data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.crisis.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nexport { IdentifiedClientState, ConsensusStateWithHeight, ClientConsensusStates, ClientUpdateProposal, Height, Params, GenesisMetadata, IdentifiedGenesisMetadata };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.client.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientStates(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusStates(key.client_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nexport { BaseVestingAccount, ContinuousVestingAccount, DelayedVestingAccount, Period, PeriodicVestingAccount };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.vesting.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/evidence.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nexport { Equivocation };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.evidence.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllEvidence(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CmwatersRookCmwatersRookRook from './cmwaters/rook/cmwaters.rook.rook';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nexport default {\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CmwatersRookCmwatersRookRook: load(CmwatersRookCmwatersRookRook, 'cmwaters.rook.rook'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<SpType modulePath=\"cmwaters.rook.rook\" moduleType=\"Position\"  />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=7fdba3cd\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedChannel, PacketState } from '../../../../ibc/core/channel/v1/channel';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    }\n};\nconst basePacketSequence = { portId: '', channelId: '', sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, ValidatorSigningInfo } from '../../../cosmos/slashing/v1beta1/slashing';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSigningInfo = { address: '' };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorMissedBlocks = { address: '' };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { MerklePrefix } from '../../../../ibc/core/commitment/v1/commitment';\nexport const protobufPackage = 'ibc.core.connection.v1';\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseConnectionEnd = { clientId: '', state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseIdentifiedConnection = {\n    id: '',\n    clientId: '',\n    state: 0,\n    delayPeriod: 0\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { clientId: '', connectionId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== '') {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientPaths = { paths: '' };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConnectionPaths = { clientId: '', paths: '' };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersion = { identifier: '', features: '' };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== '') {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin, Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseParams = {\n    communityTax: '',\n    baseProposerReward: '',\n    bonusProposerReward: '',\n    withdrawAddrEnabled: false\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== '') {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== '') {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== '') {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: '' };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== '') {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposal = {\n    title: '',\n    description: '',\n    recipient: ''\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: '',\n    height: 0\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== '') {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseDelegationDelegatorReward = { validatorAddress: '' };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: '',\n    description: '',\n    recipient: '',\n    amount: '',\n    deposit: ''\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== '') {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== '') {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseValidatorSigningInfo = {\n    address: '',\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseMsgSubmitEvidence = { submitter: '' };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== '') {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request('cosmos.evidence.v1beta1.Msg', 'SubmitEvidence', data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin } from '../../../cosmos/base/v1beta1/coin';\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from '../../../cosmos/distribution/v1beta1/distribution';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: '' };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: ''\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: '',\n    period: 0\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: '' };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: '',\n    height: 0,\n    period: 0\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisState = { previousProposer: '' };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== '') {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseMsgCreateVestingAccount = {\n    fromAddress: '',\n    toAddress: '',\n    endTime: 0,\n    delayed: false\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request('cosmos.vesting.v1beta1.Msg', 'CreateVestingAccount', data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Channel, Packet } from '../../../../ibc/core/channel/v1/channel';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseMsgChannelOpenInit = { portId: '', signer: '' };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenTry = {\n    portId: '',\n    previousChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== '') {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenAck = {\n    portId: '',\n    channelId: '',\n    counterpartyChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== '') {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseInit = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgRecvPacket = { signer: '' };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    }\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    }\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    }\n};\nconst baseMsgAcknowledgement = { signer: '' };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenInit', data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenTry', data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenAck', data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenConfirm', data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseInit', data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseConfirm', data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'RecvPacket', data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Timeout', data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'TimeoutOnClose', data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Acknowledgement', data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.auth.v1beta1';\nconst baseBaseAccount = { address: '', accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nconst baseModuleAccount = { name: '', permissions: '' };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'VOTE_OPTION_UNSPECIFIED':\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case 'VOTE_OPTION_YES':\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case 'VOTE_OPTION_ABSTAIN':\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case 'VOTE_OPTION_NO':\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case 'VOTE_OPTION_NO_WITH_VETO':\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return 'VOTE_OPTION_UNSPECIFIED';\n        case VoteOption.VOTE_OPTION_YES:\n            return 'VOTE_OPTION_YES';\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return 'VOTE_OPTION_ABSTAIN';\n        case VoteOption.VOTE_OPTION_NO:\n            return 'VOTE_OPTION_NO';\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return 'VOTE_OPTION_NO_WITH_VETO';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'PROPOSAL_STATUS_UNSPECIFIED':\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case 'PROPOSAL_STATUS_VOTING_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case 'PROPOSAL_STATUS_PASSED':\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case 'PROPOSAL_STATUS_REJECTED':\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case 'PROPOSAL_STATUS_FAILED':\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return 'PROPOSAL_STATUS_UNSPECIFIED';\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return 'PROPOSAL_STATUS_DEPOSIT_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return 'PROPOSAL_STATUS_VOTING_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return 'PROPOSAL_STATUS_PASSED';\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return 'PROPOSAL_STATUS_REJECTED';\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return 'PROPOSAL_STATUS_FAILED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseTextProposal = { title: '', description: '' };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nconst baseDeposit = { proposalId: 0, depositor: '' };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyResult = { yes: '', abstain: '', no: '', noWithVeto: '' };\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== '') {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== '') {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== '') {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== '') {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    }\n};\nconst baseVote = { proposalId: 0, voter: '', option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseFungibleTokenPacketData = {\n    denom: '',\n    amount: 0,\n    sender: '',\n    receiver: ''\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    }\n};\nconst baseDenomTrace = { path: '', baseDenom: '' };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== '') {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    }\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedClientState, ClientConsensusStates, Params } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    }\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseIdentifiedGenesisMetadata = { clientId: '' };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Counterparty, Version } from '../../../../ibc/core/connection/v1/connection';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.connection.v1';\nconst baseMsgConnectionOpenInit = {\n    clientId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: '',\n    previousConnectionId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== '') {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: '',\n    counterpartyConnectionId: '',\n    signer: ''\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== '') {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: '', signer: '' };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenInit', data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenTry', data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenAck', data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenConfirm', data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from '../../../cosmos/staking/v1beta1/staking';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    }\n};\nconst baseLastValidatorPower = { address: '', power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from '../../../../confio/proofs';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.core.commitment.v1';\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePath = { keyPath: '' };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ics23';\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_HASH':\n            return HashOp.NO_HASH;\n        case 1:\n        case 'SHA256':\n            return HashOp.SHA256;\n        case 2:\n        case 'SHA512':\n            return HashOp.SHA512;\n        case 3:\n        case 'KECCAK':\n            return HashOp.KECCAK;\n        case 4:\n        case 'RIPEMD160':\n            return HashOp.RIPEMD160;\n        case 5:\n        case 'BITCOIN':\n            return HashOp.BITCOIN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return 'NO_HASH';\n        case HashOp.SHA256:\n            return 'SHA256';\n        case HashOp.SHA512:\n            return 'SHA512';\n        case HashOp.KECCAK:\n            return 'KECCAK';\n        case HashOp.RIPEMD160:\n            return 'RIPEMD160';\n        case HashOp.BITCOIN:\n            return 'BITCOIN';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_PREFIX':\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case 'VAR_PROTO':\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case 'VAR_RLP':\n            return LengthOp.VAR_RLP;\n        case 3:\n        case 'FIXED32_BIG':\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case 'FIXED32_LITTLE':\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case 'FIXED64_BIG':\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case 'FIXED64_LITTLE':\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case 'REQUIRE_32_BYTES':\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case 'REQUIRE_64_BYTES':\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return 'NO_PREFIX';\n        case LengthOp.VAR_PROTO:\n            return 'VAR_PROTO';\n        case LengthOp.VAR_RLP:\n            return 'VAR_RLP';\n        case LengthOp.FIXED32_BIG:\n            return 'FIXED32_BIG';\n        case LengthOp.FIXED32_LITTLE:\n            return 'FIXED32_LITTLE';\n        case LengthOp.FIXED64_BIG:\n            return 'FIXED64_BIG';\n        case LengthOp.FIXED64_LITTLE:\n            return 'FIXED64_LITTLE';\n        case LengthOp.REQUIRE_32_BYTES:\n            return 'REQUIRE_32_BYTES';\n        case LengthOp.REQUIRE_64_BYTES:\n            return 'REQUIRE_64_BYTES';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch ? BatchProof.toJSON(message.batch) : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    }\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    }\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    }\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { ResourceSet } from '../rook/types';\nexport const protobufPackage = 'cmwaters.rook.rook';\nconst baseGameConfig = {};\nexport const GameConfig = {\n    encode(message, writer = Writer.create()) {\n        if (message.initial !== undefined) {\n            InitializationConfig.encode(message.initial, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.map !== undefined) {\n            MapConfig.encode(message.map, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGameConfig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.initial = InitializationConfig.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.map = MapConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGameConfig };\n        if (object.initial !== undefined && object.initial !== null) {\n            message.initial = InitializationConfig.fromJSON(object.initial);\n        }\n        else {\n            message.initial = undefined;\n        }\n        if (object.map !== undefined && object.map !== null) {\n            message.map = MapConfig.fromJSON(object.map);\n        }\n        else {\n            message.map = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.initial !== undefined && (obj.initial = message.initial ? InitializationConfig.toJSON(message.initial) : undefined);\n        message.map !== undefined && (obj.map = message.map ? MapConfig.toJSON(message.map) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGameConfig };\n        if (object.initial !== undefined && object.initial !== null) {\n            message.initial = InitializationConfig.fromPartial(object.initial);\n        }\n        else {\n            message.initial = undefined;\n        }\n        if (object.map !== undefined && object.map !== null) {\n            message.map = MapConfig.fromPartial(object.map);\n        }\n        else {\n            message.map = undefined;\n        }\n        return message;\n    }\n};\nconst baseMapConfig = { width: 0, height: 0, seed: 0, mountainsDensity: 0, forestDensity: 0, lakeDensity: 0, plainsDensity: 0 };\nexport const MapConfig = {\n    encode(message, writer = Writer.create()) {\n        if (message.width !== 0) {\n            writer.uint32(8).uint32(message.width);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint32(message.height);\n        }\n        if (message.seed !== 0) {\n            writer.uint32(24).int64(message.seed);\n        }\n        if (message.mountainsDensity !== 0) {\n            writer.uint32(32).uint32(message.mountainsDensity);\n        }\n        if (message.forestDensity !== 0) {\n            writer.uint32(40).uint32(message.forestDensity);\n        }\n        if (message.lakeDensity !== 0) {\n            writer.uint32(48).uint32(message.lakeDensity);\n        }\n        if (message.plainsDensity !== 0) {\n            writer.uint32(56).uint32(message.plainsDensity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMapConfig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.width = reader.uint32();\n                    break;\n                case 2:\n                    message.height = reader.uint32();\n                    break;\n                case 3:\n                    message.seed = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.mountainsDensity = reader.uint32();\n                    break;\n                case 5:\n                    message.forestDensity = reader.uint32();\n                    break;\n                case 6:\n                    message.lakeDensity = reader.uint32();\n                    break;\n                case 7:\n                    message.plainsDensity = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMapConfig };\n        if (object.width !== undefined && object.width !== null) {\n            message.width = Number(object.width);\n        }\n        else {\n            message.width = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.seed !== undefined && object.seed !== null) {\n            message.seed = Number(object.seed);\n        }\n        else {\n            message.seed = 0;\n        }\n        if (object.mountainsDensity !== undefined && object.mountainsDensity !== null) {\n            message.mountainsDensity = Number(object.mountainsDensity);\n        }\n        else {\n            message.mountainsDensity = 0;\n        }\n        if (object.forestDensity !== undefined && object.forestDensity !== null) {\n            message.forestDensity = Number(object.forestDensity);\n        }\n        else {\n            message.forestDensity = 0;\n        }\n        if (object.lakeDensity !== undefined && object.lakeDensity !== null) {\n            message.lakeDensity = Number(object.lakeDensity);\n        }\n        else {\n            message.lakeDensity = 0;\n        }\n        if (object.plainsDensity !== undefined && object.plainsDensity !== null) {\n            message.plainsDensity = Number(object.plainsDensity);\n        }\n        else {\n            message.plainsDensity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.width !== undefined && (obj.width = message.width);\n        message.height !== undefined && (obj.height = message.height);\n        message.seed !== undefined && (obj.seed = message.seed);\n        message.mountainsDensity !== undefined && (obj.mountainsDensity = message.mountainsDensity);\n        message.forestDensity !== undefined && (obj.forestDensity = message.forestDensity);\n        message.lakeDensity !== undefined && (obj.lakeDensity = message.lakeDensity);\n        message.plainsDensity !== undefined && (obj.plainsDensity = message.plainsDensity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMapConfig };\n        if (object.width !== undefined && object.width !== null) {\n            message.width = object.width;\n        }\n        else {\n            message.width = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.seed !== undefined && object.seed !== null) {\n            message.seed = object.seed;\n        }\n        else {\n            message.seed = 0;\n        }\n        if (object.mountainsDensity !== undefined && object.mountainsDensity !== null) {\n            message.mountainsDensity = object.mountainsDensity;\n        }\n        else {\n            message.mountainsDensity = 0;\n        }\n        if (object.forestDensity !== undefined && object.forestDensity !== null) {\n            message.forestDensity = object.forestDensity;\n        }\n        else {\n            message.forestDensity = 0;\n        }\n        if (object.lakeDensity !== undefined && object.lakeDensity !== null) {\n            message.lakeDensity = object.lakeDensity;\n        }\n        else {\n            message.lakeDensity = 0;\n        }\n        if (object.plainsDensity !== undefined && object.plainsDensity !== null) {\n            message.plainsDensity = object.plainsDensity;\n        }\n        else {\n            message.plainsDensity = 0;\n        }\n        return message;\n    }\n};\nconst baseInitializationConfig = { teams: 0 };\nexport const InitializationConfig = {\n    encode(message, writer = Writer.create()) {\n        if (message.teams !== 0) {\n            writer.uint32(8).uint32(message.teams);\n        }\n        if (message.resources !== undefined) {\n            ResourceSet.encode(message.resources, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInitializationConfig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.teams = reader.uint32();\n                    break;\n                case 2:\n                    message.resources = ResourceSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInitializationConfig };\n        if (object.teams !== undefined && object.teams !== null) {\n            message.teams = Number(object.teams);\n        }\n        else {\n            message.teams = 0;\n        }\n        if (object.resources !== undefined && object.resources !== null) {\n            message.resources = ResourceSet.fromJSON(object.resources);\n        }\n        else {\n            message.resources = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.teams !== undefined && (obj.teams = message.teams);\n        message.resources !== undefined && (obj.resources = message.resources ? ResourceSet.toJSON(message.resources) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInitializationConfig };\n        if (object.teams !== undefined && object.teams !== null) {\n            message.teams = object.teams;\n        }\n        else {\n            message.teams = 0;\n        }\n        if (object.resources !== undefined && object.resources !== null) {\n            message.resources = ResourceSet.fromPartial(object.resources);\n        }\n        else {\n            message.resources = undefined;\n        }\n        return message;\n    }\n};\nconst baseParams = {};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        Object.entries(message.productionRate).forEach(([key, value]) => {\n            Params_ProductionRateEntry.encode({ key: key, value }, writer.uint32(10).fork()).ldelim();\n        });\n        Object.entries(message.constructionCost).forEach(([key, value]) => {\n            Params_ConstructionCostEntry.encode({ key: key, value }, writer.uint32(18).fork()).ldelim();\n        });\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.productionRate = {};\n        message.constructionCost = {};\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    const entry1 = Params_ProductionRateEntry.decode(reader, reader.uint32());\n                    if (entry1.value !== undefined) {\n                        message.productionRate[entry1.key] = entry1.value;\n                    }\n                    break;\n                case 2:\n                    const entry2 = Params_ConstructionCostEntry.decode(reader, reader.uint32());\n                    if (entry2.value !== undefined) {\n                        message.constructionCost[entry2.key] = entry2.value;\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.productionRate = {};\n        message.constructionCost = {};\n        if (object.productionRate !== undefined && object.productionRate !== null) {\n            Object.entries(object.productionRate).forEach(([key, value]) => {\n                message.productionRate[Number(key)] = ResourceSet.fromJSON(value);\n            });\n        }\n        if (object.constructionCost !== undefined && object.constructionCost !== null) {\n            Object.entries(object.constructionCost).forEach(([key, value]) => {\n                message.constructionCost[Number(key)] = ResourceSet.fromJSON(value);\n            });\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        obj.productionRate = {};\n        if (message.productionRate) {\n            Object.entries(message.productionRate).forEach(([k, v]) => {\n                obj.productionRate[k] = ResourceSet.toJSON(v);\n            });\n        }\n        obj.constructionCost = {};\n        if (message.constructionCost) {\n            Object.entries(message.constructionCost).forEach(([k, v]) => {\n                obj.constructionCost[k] = ResourceSet.toJSON(v);\n            });\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.productionRate = {};\n        message.constructionCost = {};\n        if (object.productionRate !== undefined && object.productionRate !== null) {\n            Object.entries(object.productionRate).forEach(([key, value]) => {\n                if (value !== undefined) {\n                    message.productionRate[Number(key)] = ResourceSet.fromPartial(value);\n                }\n            });\n        }\n        if (object.constructionCost !== undefined && object.constructionCost !== null) {\n            Object.entries(object.constructionCost).forEach(([key, value]) => {\n                if (value !== undefined) {\n                    message.constructionCost[Number(key)] = ResourceSet.fromPartial(value);\n                }\n            });\n        }\n        return message;\n    }\n};\nconst baseParams_ProductionRateEntry = { key: 0 };\nexport const Params_ProductionRateEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== 0) {\n            writer.uint32(8).uint32(message.key);\n        }\n        if (message.value !== undefined) {\n            ResourceSet.encode(message.value, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams_ProductionRateEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.uint32();\n                    break;\n                case 2:\n                    message.value = ResourceSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams_ProductionRateEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = Number(object.key);\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = ResourceSet.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value ? ResourceSet.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams_ProductionRateEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = ResourceSet.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseParams_ConstructionCostEntry = { key: 0 };\nexport const Params_ConstructionCostEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== 0) {\n            writer.uint32(8).uint32(message.key);\n        }\n        if (message.value !== undefined) {\n            ResourceSet.encode(message.value, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams_ConstructionCostEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.uint32();\n                    break;\n                case 2:\n                    message.value = ResourceSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams_ConstructionCostEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = Number(object.key);\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = ResourceSet.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value ? ResourceSet.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams_ConstructionCostEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = ResourceSet.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Event } from '../../../../tendermint/abci/types';\nexport const protobufPackage = 'cosmos.base.abci.v1beta1';\nconst baseTxResponse = {\n    height: 0,\n    txhash: '',\n    codespace: '',\n    code: 0,\n    data: '',\n    rawLog: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: ''\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== '') {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== '') {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== '') {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== '') {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    }\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: '' };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseStringEvent = { type: '' };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseAttribute = { key: '', value: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    }\n};\nconst baseResult = { log: '' };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgData = { msgType: '' };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== '') {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Position, directionFromJSON, directionToJSON, settlementFromJSON, settlementToJSON } from '../rook/types';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { GameConfig } from '../rook/config';\nexport const protobufPackage = 'cmwaters.rook.rook';\nconst baseMsgMove = { creator: '', gameId: 0, direction: 0, population: 0 };\nexport const MsgMove = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.gameId !== 0) {\n            writer.uint32(16).uint64(message.gameId);\n        }\n        if (message.position !== undefined) {\n            Position.encode(message.position, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.direction !== 0) {\n            writer.uint32(32).int32(message.direction);\n        }\n        if (message.population !== 0) {\n            writer.uint32(40).uint32(message.population);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMove };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.gameId = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.position = Position.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.direction = reader.int32();\n                    break;\n                case 5:\n                    message.population = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMove };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = Number(object.gameId);\n        }\n        else {\n            message.gameId = 0;\n        }\n        if (object.position !== undefined && object.position !== null) {\n            message.position = Position.fromJSON(object.position);\n        }\n        else {\n            message.position = undefined;\n        }\n        if (object.direction !== undefined && object.direction !== null) {\n            message.direction = directionFromJSON(object.direction);\n        }\n        else {\n            message.direction = 0;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            message.population = Number(object.population);\n        }\n        else {\n            message.population = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.gameId !== undefined && (obj.gameId = message.gameId);\n        message.position !== undefined && (obj.position = message.position ? Position.toJSON(message.position) : undefined);\n        message.direction !== undefined && (obj.direction = directionToJSON(message.direction));\n        message.population !== undefined && (obj.population = message.population);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMove };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = object.gameId;\n        }\n        else {\n            message.gameId = 0;\n        }\n        if (object.position !== undefined && object.position !== null) {\n            message.position = Position.fromPartial(object.position);\n        }\n        else {\n            message.position = undefined;\n        }\n        if (object.direction !== undefined && object.direction !== null) {\n            message.direction = object.direction;\n        }\n        else {\n            message.direction = 0;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            message.population = object.population;\n        }\n        else {\n            message.population = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMoveResponse = {};\nexport const MsgMoveResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMoveResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMoveResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMoveResponse };\n        return message;\n    }\n};\nconst baseMsgBuild = { creator: '', gameId: 0, settlement: 0 };\nexport const MsgBuild = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.gameId !== 0) {\n            writer.uint32(16).uint64(message.gameId);\n        }\n        if (message.settlement !== 0) {\n            writer.uint32(24).int32(message.settlement);\n        }\n        if (message.position !== undefined) {\n            Position.encode(message.position, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBuild };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.gameId = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.settlement = reader.int32();\n                    break;\n                case 4:\n                    message.position = Position.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBuild };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = Number(object.gameId);\n        }\n        else {\n            message.gameId = 0;\n        }\n        if (object.settlement !== undefined && object.settlement !== null) {\n            message.settlement = settlementFromJSON(object.settlement);\n        }\n        else {\n            message.settlement = 0;\n        }\n        if (object.position !== undefined && object.position !== null) {\n            message.position = Position.fromJSON(object.position);\n        }\n        else {\n            message.position = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.gameId !== undefined && (obj.gameId = message.gameId);\n        message.settlement !== undefined && (obj.settlement = settlementToJSON(message.settlement));\n        message.position !== undefined && (obj.position = message.position ? Position.toJSON(message.position) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBuild };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = object.gameId;\n        }\n        else {\n            message.gameId = 0;\n        }\n        if (object.settlement !== undefined && object.settlement !== null) {\n            message.settlement = object.settlement;\n        }\n        else {\n            message.settlement = 0;\n        }\n        if (object.position !== undefined && object.position !== null) {\n            message.position = Position.fromPartial(object.position);\n        }\n        else {\n            message.position = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBuildResponse = {};\nexport const MsgBuildResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBuildResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBuildResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBuildResponse };\n        return message;\n    }\n};\nconst baseMsgCreate = { players: '' };\nexport const MsgCreate = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.players) {\n            writer.uint32(18).string(v);\n        }\n        if (message.config !== undefined) {\n            GameConfig.encode(message.config, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreate };\n        message.players = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.players.push(reader.string());\n                    break;\n                case 3:\n                    message.config = GameConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreate };\n        message.players = [];\n        if (object.players !== undefined && object.players !== null) {\n            for (const e of object.players) {\n                message.players.push(String(e));\n            }\n        }\n        if (object.config !== undefined && object.config !== null) {\n            message.config = GameConfig.fromJSON(object.config);\n        }\n        else {\n            message.config = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.players) {\n            obj.players = message.players.map((e) => e);\n        }\n        else {\n            obj.players = [];\n        }\n        message.config !== undefined && (obj.config = message.config ? GameConfig.toJSON(message.config) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreate };\n        message.players = [];\n        if (object.players !== undefined && object.players !== null) {\n            for (const e of object.players) {\n                message.players.push(e);\n            }\n        }\n        if (object.config !== undefined && object.config !== null) {\n            message.config = GameConfig.fromPartial(object.config);\n        }\n        else {\n            message.config = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateResponse = { gameId: 0 };\nexport const MsgCreateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gameId !== 0) {\n            writer.uint32(8).uint64(message.gameId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gameId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateResponse };\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = Number(object.gameId);\n        }\n        else {\n            message.gameId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gameId !== undefined && (obj.gameId = message.gameId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateResponse };\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = object.gameId;\n        }\n        else {\n            message.gameId = 0;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Move(request) {\n        const data = MsgMove.encode(request).finish();\n        const promise = this.rpc.request('cmwaters.rook.rook.Msg', 'Move', data);\n        return promise.then((data) => MsgMoveResponse.decode(new Reader(data)));\n    }\n    Build(request) {\n        const data = MsgBuild.encode(request).finish();\n        const promise = this.rpc.request('cmwaters.rook.rook.Msg', 'Build', data);\n        return promise.then((data) => MsgBuildResponse.decode(new Reader(data)));\n    }\n    Create(request) {\n        const data = MsgCreate.encode(request).finish();\n        const promise = this.rpc.request('cmwaters.rook.rook.Msg', 'Create', data);\n        return promise.then((data) => MsgCreateResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../../cosmos/base/v1beta1/coin';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseMsgTransfer = {\n    sourcePort: '',\n    sourceChannel: '',\n    sender: '',\n    receiver: '',\n    timeoutTimestamp: 0\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request('ibc.applications.transfer.v1.Msg', 'Transfer', data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON } from '../../../cosmos/gov/v1beta1/gov';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\nconst baseMsgSubmitProposal = { proposer: '' };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== '') {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVote = { proposalId: 0, voter: '', option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    }\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: '' };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'SubmitProposal', data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Vote', data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Deposit', data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n"],"sourceRoot":""}