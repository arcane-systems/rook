{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cmwaters/rook/rook.game/module/types/rook/game/config.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cmwaters/rook/rook.game/module/types/rook/game/types.js","webpack:///./src/store/generated/cmwaters/rook/rook.game/module/types/rook/game/state.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cmwaters/rook/rook.game/module/types/rook/game/tx.js","webpack:///./src/store/generated/cmwaters/rook/cmwaters.rook.rook/module/types/rook/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/cmwaters/rook/cmwaters.rook.rook/module/types/rook/state.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/cmwaters/rook/rook.game/module/rest.js","webpack:///./src/store/generated/cmwaters/rook/rook.game/module/index.js","webpack:///./src/store/generated/cmwaters/rook/rook.game/index.js","webpack:///./src/store/generated/cmwaters/rook/cmwaters.rook.rook/module/rest.js","webpack:///./src/store/generated/cmwaters/rook/cmwaters.rook.rook/module/index.js","webpack:///./src/store/generated/cmwaters/rook/cmwaters.rook.rook/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cmwaters/rook/cmwaters.rook.rook/module/types/rook/config.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cmwaters/rook/cmwaters.rook.rook/module/types/rook/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","String","fromCharCode","join","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","string","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","baseGameConfig","GameConfig","initial","InitializationConfig","MapConfig","baseMapConfig","width","height","seed","mountainsDensity","forestDensity","lakeDensity","plainsDensity","baseInitializationConfig","teams","resources","ResourceSet","baseParams","Params","entries","productionRate","forEach","Params_ProductionRateEntry","constructionCost","Params_ConstructionCostEntry","entry1","entry2","k","baseParams_ProductionRateEntry","baseParams_ConstructionCostEntry","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","Direction","Landscape","Settlement","directionFromJSON","LEFT","RIGHT","UP","DOWN","UNRECOGNIZED","directionToJSON","landscapeFromJSON","UNKNOWN","PLAINS","FOREST","MOUNTAINS","LAKE","landscapeToJSON","settlementFromJSON","NONE","TOWN","CITY","CAPITAL","LUMBERMILL","QUARRY","FARM","ROOK","settlementToJSON","baseMap","Map","tiles","Tile","baseTile","landscape","faction","baseFaction","Faction","population","Faction_PopulationEntry","settlements","Faction_SettlementsEntry","entry3","baseFaction_PopulationEntry","baseFaction_SettlementsEntry","basePosition","x","y","Position","baseResourceSet","food","stone","wood","baseGame","step","Game","players","Game_PlayersEntry","config","uint64","baseGame_PlayersEntry","baseHeight","revisionNumber","revisionHeight","Height","baseMsgMove","creator","gameId","direction","MsgMove","position","baseMsgBuild","settlement","MsgBuild","baseMsgCreate","MsgCreate","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","description","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","maxValidators","maxEntries","historicalEntries","bondDenom","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","GameDirection","GameLandscape","GameSettlement","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","path","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryGame","id","method","queryParams","types","MissingWalletError","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgCreate","msgMove","msgBuild","queryClient","initTxClient","vuexGetters","initQueryClient","getStructure","template","structure","fields","field","RookDirection","RookLandscape","RookSettlement","getDefaultState","_Structure","_Subscriptions","Set","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getGame","getParams","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","action","payload","SpVuexError","QueryGame","options","subscribe","all","QueryParams","sendMsgCreate","msg","sendMsgMove","sendMsgBuild","MsgCreateVestingAccount","msgCreateVestingAccount","V1Beta1ProposalStatus","V1Beta1VoteOption","sendMsgCreateVestingAccount","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","depositor","queryTallyResult","queryVotes","queryVote","voter","MsgVote","MsgDeposit","MsgSubmitProposal","msgVote","msgDeposit","msgSubmitProposal","mergeResults","next_values","prop","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","pagination","nextKey","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgVote","sendMsgDeposit","sendMsgSubmitProposal","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","MsgFundCommunityPool","msgWithdrawValidatorCommission","msgSetWithdrawAddress","msgFundCommunityPool","msgWithdrawDelegatorReward","V1Beta1BondStatus","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgSetWithdrawAddress","sendMsgFundCommunityPool","sendMsgWithdrawDelegatorReward","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","validatorAddr","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgUndelegate","msgCreateValidator","msgDelegate","msgBeginRedelegate","msgEditValidator","V1State","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgUndelegate","sendMsgCreateValidator","sendMsgDelegate","sendMsgBeginRedelegate","sendMsgEditValidator","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenTry","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenAck","msgConnectionOpenTry","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenAck","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","client_id","QueryConnectionClientState","QueryConnectionConsensusState","revision_number","revision_height","sendMsgConnectionOpenTry","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenAck","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","MsgUnjail","msgUnjail","V1Order","SigningInfo","SigningInfos","ValidatorMissedBlocks","MissedBlock","ValidatorSigningInfo","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenTry","MsgChannelCloseInit","MsgChannelOpenAck","MsgChannelOpenConfirm","MsgTimeoutOnClose","MsgChannelCloseConfirm","MsgChannelOpenInit","MsgRecvPacket","MsgTimeout","MsgAcknowledgement","msgChannelOpenTry","msgChannelCloseInit","msgChannelOpenAck","msgChannelOpenConfirm","msgTimeoutOnClose","msgChannelCloseConfirm","msgChannelOpenInit","msgRecvPacket","msgTimeout","msgAcknowledgement","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenTry","sendMsgChannelCloseInit","sendMsgChannelOpenAck","sendMsgChannelOpenConfirm","sendMsgTimeoutOnClose","sendMsgChannelCloseConfirm","sendMsgChannelOpenInit","sendMsgRecvPacket","sendMsgTimeout","sendMsgAcknowledgement","baseCoin","denom","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","queryAllBalances","queryBalance","queryDenomsMetadata","queryDenomMetadata","queryTotalSupply","querySupplyOf","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgSend","msgMultiSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryDenomMetadata","QueryDenomsMetadata","sendMsgSend","sendMsgMultiSend","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpdateClient","msgSubmitMisbehaviour","msgCreateClient","msgUpgradeClient","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","QueryClientStates","QueryConsensusState","QueryConsensusStates","QueryClientParams","sendMsgUpdateClient","sendMsgSubmitMisbehaviour","sendMsgCreateClient","sendMsgUpgradeClient","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","CmwatersRookRookGame","load","CmwatersRookCmwatersRookRook","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkIbcCoreConnectionV1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkCosmosEvidenceV1Beta1","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","modulePath","moduleType","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","globalProperties","_depsLoaded","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.42a6c357.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseMsgCreateClient = { signer: '' };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpdateClient = { clientId: '', signer: '' };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpgradeClient = { clientId: '', signer: '' };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviour = { clientId: '', signer: '' };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'CreateClient', data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpdateClient', data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpgradeClient', data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'SubmitMisbehaviour', data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { ResourceSet } from '../../rook/game/types';\nexport const protobufPackage = 'rook.game';\nconst baseGameConfig = {};\nexport const GameConfig = {\n    encode(message, writer = Writer.create()) {\n        if (message.initial !== undefined) {\n            InitializationConfig.encode(message.initial, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.map !== undefined) {\n            MapConfig.encode(message.map, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGameConfig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.initial = InitializationConfig.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.map = MapConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGameConfig };\n        if (object.initial !== undefined && object.initial !== null) {\n            message.initial = InitializationConfig.fromJSON(object.initial);\n        }\n        else {\n            message.initial = undefined;\n        }\n        if (object.map !== undefined && object.map !== null) {\n            message.map = MapConfig.fromJSON(object.map);\n        }\n        else {\n            message.map = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.initial !== undefined && (obj.initial = message.initial ? InitializationConfig.toJSON(message.initial) : undefined);\n        message.map !== undefined && (obj.map = message.map ? MapConfig.toJSON(message.map) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGameConfig };\n        if (object.initial !== undefined && object.initial !== null) {\n            message.initial = InitializationConfig.fromPartial(object.initial);\n        }\n        else {\n            message.initial = undefined;\n        }\n        if (object.map !== undefined && object.map !== null) {\n            message.map = MapConfig.fromPartial(object.map);\n        }\n        else {\n            message.map = undefined;\n        }\n        return message;\n    }\n};\nconst baseMapConfig = { width: 0, height: 0, seed: 0, mountainsDensity: 0, forestDensity: 0, lakeDensity: 0, plainsDensity: 0 };\nexport const MapConfig = {\n    encode(message, writer = Writer.create()) {\n        if (message.width !== 0) {\n            writer.uint32(8).uint32(message.width);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint32(message.height);\n        }\n        if (message.seed !== 0) {\n            writer.uint32(24).int64(message.seed);\n        }\n        if (message.mountainsDensity !== 0) {\n            writer.uint32(32).uint32(message.mountainsDensity);\n        }\n        if (message.forestDensity !== 0) {\n            writer.uint32(40).uint32(message.forestDensity);\n        }\n        if (message.lakeDensity !== 0) {\n            writer.uint32(48).uint32(message.lakeDensity);\n        }\n        if (message.plainsDensity !== 0) {\n            writer.uint32(56).uint32(message.plainsDensity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMapConfig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.width = reader.uint32();\n                    break;\n                case 2:\n                    message.height = reader.uint32();\n                    break;\n                case 3:\n                    message.seed = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.mountainsDensity = reader.uint32();\n                    break;\n                case 5:\n                    message.forestDensity = reader.uint32();\n                    break;\n                case 6:\n                    message.lakeDensity = reader.uint32();\n                    break;\n                case 7:\n                    message.plainsDensity = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMapConfig };\n        if (object.width !== undefined && object.width !== null) {\n            message.width = Number(object.width);\n        }\n        else {\n            message.width = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.seed !== undefined && object.seed !== null) {\n            message.seed = Number(object.seed);\n        }\n        else {\n            message.seed = 0;\n        }\n        if (object.mountainsDensity !== undefined && object.mountainsDensity !== null) {\n            message.mountainsDensity = Number(object.mountainsDensity);\n        }\n        else {\n            message.mountainsDensity = 0;\n        }\n        if (object.forestDensity !== undefined && object.forestDensity !== null) {\n            message.forestDensity = Number(object.forestDensity);\n        }\n        else {\n            message.forestDensity = 0;\n        }\n        if (object.lakeDensity !== undefined && object.lakeDensity !== null) {\n            message.lakeDensity = Number(object.lakeDensity);\n        }\n        else {\n            message.lakeDensity = 0;\n        }\n        if (object.plainsDensity !== undefined && object.plainsDensity !== null) {\n            message.plainsDensity = Number(object.plainsDensity);\n        }\n        else {\n            message.plainsDensity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.width !== undefined && (obj.width = message.width);\n        message.height !== undefined && (obj.height = message.height);\n        message.seed !== undefined && (obj.seed = message.seed);\n        message.mountainsDensity !== undefined && (obj.mountainsDensity = message.mountainsDensity);\n        message.forestDensity !== undefined && (obj.forestDensity = message.forestDensity);\n        message.lakeDensity !== undefined && (obj.lakeDensity = message.lakeDensity);\n        message.plainsDensity !== undefined && (obj.plainsDensity = message.plainsDensity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMapConfig };\n        if (object.width !== undefined && object.width !== null) {\n            message.width = object.width;\n        }\n        else {\n            message.width = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.seed !== undefined && object.seed !== null) {\n            message.seed = object.seed;\n        }\n        else {\n            message.seed = 0;\n        }\n        if (object.mountainsDensity !== undefined && object.mountainsDensity !== null) {\n            message.mountainsDensity = object.mountainsDensity;\n        }\n        else {\n            message.mountainsDensity = 0;\n        }\n        if (object.forestDensity !== undefined && object.forestDensity !== null) {\n            message.forestDensity = object.forestDensity;\n        }\n        else {\n            message.forestDensity = 0;\n        }\n        if (object.lakeDensity !== undefined && object.lakeDensity !== null) {\n            message.lakeDensity = object.lakeDensity;\n        }\n        else {\n            message.lakeDensity = 0;\n        }\n        if (object.plainsDensity !== undefined && object.plainsDensity !== null) {\n            message.plainsDensity = object.plainsDensity;\n        }\n        else {\n            message.plainsDensity = 0;\n        }\n        return message;\n    }\n};\nconst baseInitializationConfig = { teams: 0 };\nexport const InitializationConfig = {\n    encode(message, writer = Writer.create()) {\n        if (message.teams !== 0) {\n            writer.uint32(8).uint32(message.teams);\n        }\n        if (message.resources !== undefined) {\n            ResourceSet.encode(message.resources, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInitializationConfig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.teams = reader.uint32();\n                    break;\n                case 2:\n                    message.resources = ResourceSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInitializationConfig };\n        if (object.teams !== undefined && object.teams !== null) {\n            message.teams = Number(object.teams);\n        }\n        else {\n            message.teams = 0;\n        }\n        if (object.resources !== undefined && object.resources !== null) {\n            message.resources = ResourceSet.fromJSON(object.resources);\n        }\n        else {\n            message.resources = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.teams !== undefined && (obj.teams = message.teams);\n        message.resources !== undefined && (obj.resources = message.resources ? ResourceSet.toJSON(message.resources) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInitializationConfig };\n        if (object.teams !== undefined && object.teams !== null) {\n            message.teams = object.teams;\n        }\n        else {\n            message.teams = 0;\n        }\n        if (object.resources !== undefined && object.resources !== null) {\n            message.resources = ResourceSet.fromPartial(object.resources);\n        }\n        else {\n            message.resources = undefined;\n        }\n        return message;\n    }\n};\nconst baseParams = {};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        Object.entries(message.productionRate).forEach(([key, value]) => {\n            Params_ProductionRateEntry.encode({ key: key, value }, writer.uint32(10).fork()).ldelim();\n        });\n        Object.entries(message.constructionCost).forEach(([key, value]) => {\n            Params_ConstructionCostEntry.encode({ key: key, value }, writer.uint32(18).fork()).ldelim();\n        });\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.productionRate = {};\n        message.constructionCost = {};\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    const entry1 = Params_ProductionRateEntry.decode(reader, reader.uint32());\n                    if (entry1.value !== undefined) {\n                        message.productionRate[entry1.key] = entry1.value;\n                    }\n                    break;\n                case 2:\n                    const entry2 = Params_ConstructionCostEntry.decode(reader, reader.uint32());\n                    if (entry2.value !== undefined) {\n                        message.constructionCost[entry2.key] = entry2.value;\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.productionRate = {};\n        message.constructionCost = {};\n        if (object.productionRate !== undefined && object.productionRate !== null) {\n            Object.entries(object.productionRate).forEach(([key, value]) => {\n                message.productionRate[Number(key)] = ResourceSet.fromJSON(value);\n            });\n        }\n        if (object.constructionCost !== undefined && object.constructionCost !== null) {\n            Object.entries(object.constructionCost).forEach(([key, value]) => {\n                message.constructionCost[Number(key)] = ResourceSet.fromJSON(value);\n            });\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        obj.productionRate = {};\n        if (message.productionRate) {\n            Object.entries(message.productionRate).forEach(([k, v]) => {\n                obj.productionRate[k] = ResourceSet.toJSON(v);\n            });\n        }\n        obj.constructionCost = {};\n        if (message.constructionCost) {\n            Object.entries(message.constructionCost).forEach(([k, v]) => {\n                obj.constructionCost[k] = ResourceSet.toJSON(v);\n            });\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.productionRate = {};\n        message.constructionCost = {};\n        if (object.productionRate !== undefined && object.productionRate !== null) {\n            Object.entries(object.productionRate).forEach(([key, value]) => {\n                if (value !== undefined) {\n                    message.productionRate[Number(key)] = ResourceSet.fromPartial(value);\n                }\n            });\n        }\n        if (object.constructionCost !== undefined && object.constructionCost !== null) {\n            Object.entries(object.constructionCost).forEach(([key, value]) => {\n                if (value !== undefined) {\n                    message.constructionCost[Number(key)] = ResourceSet.fromPartial(value);\n                }\n            });\n        }\n        return message;\n    }\n};\nconst baseParams_ProductionRateEntry = { key: 0 };\nexport const Params_ProductionRateEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== 0) {\n            writer.uint32(8).uint32(message.key);\n        }\n        if (message.value !== undefined) {\n            ResourceSet.encode(message.value, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams_ProductionRateEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.uint32();\n                    break;\n                case 2:\n                    message.value = ResourceSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams_ProductionRateEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = Number(object.key);\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = ResourceSet.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value ? ResourceSet.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams_ProductionRateEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = ResourceSet.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseParams_ConstructionCostEntry = { key: 0 };\nexport const Params_ConstructionCostEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== 0) {\n            writer.uint32(8).uint32(message.key);\n        }\n        if (message.value !== undefined) {\n            ResourceSet.encode(message.value, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams_ConstructionCostEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.uint32();\n                    break;\n                case 2:\n                    message.value = ResourceSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams_ConstructionCostEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = Number(object.key);\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = ResourceSet.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value ? ResourceSet.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams_ConstructionCostEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = ResourceSet.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { Header } from '../../tendermint/types/types';\nimport { ProofOps } from '../../tendermint/crypto/proof';\nimport { EvidenceParams, ValidatorParams, VersionParams } from '../../tendermint/types/params';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.abci';\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NEW':\n            return CheckTxType.NEW;\n        case 1:\n        case 'RECHECK':\n            return CheckTxType.RECHECK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return 'NEW';\n        case CheckTxType.RECHECK:\n            return 'RECHECK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case 'DUPLICATE_VOTE':\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case 'LIGHT_CLIENT_ATTACK':\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return 'UNKNOWN';\n        case EvidenceType.DUPLICATE_VOTE:\n            return 'DUPLICATE_VOTE';\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return 'LIGHT_CLIENT_ATTACK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case 'REJECT':\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case 'REJECT_FORMAT':\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case 'REJECT_SENDER':\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseOfferSnapshot_Result.ABORT:\n            return 'ABORT';\n        case ResponseOfferSnapshot_Result.REJECT:\n            return 'REJECT';\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return 'REJECT_FORMAT';\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return 'REJECT_SENDER';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case 'RETRY':\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case 'RETRY_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case 'REJECT_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return 'ABORT';\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return 'RETRY';\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return 'RETRY_SNAPSHOT';\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return 'REJECT_SNAPSHOT';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseRequestEcho = { message: '' };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    }\n};\nconst baseRequestInfo = { version: '', blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== '') {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestSetOption = { key: '', value: '' };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseRequestInitChain = { chainId: '', initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestQuery = { path: '', height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    }\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    }\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    }\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: '' };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseResponseException = { error: '' };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== '') {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEcho = { message: '' };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    }\n};\nconst baseResponseInfo = {\n    data: '',\n    version: '',\n    appVersion: 0,\n    lastBlockHeight: 0\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== '') {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseSetOption = { code: 0, log: '', info: '' };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    }\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: '',\n    info: '',\n    index: 0,\n    height: 0,\n    codespace: ''\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: ''\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    }\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => (e ? VoteInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEvent = { type: '' };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    }\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    }\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Echo', data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Flush', data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Info', data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'SetOption', data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'DeliverTx', data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'CheckTx', data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Query', data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Commit', data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'InitChain', data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'BeginBlock', data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'EndBlock', data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ListSnapshots', data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'OfferSnapshot', data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'LoadSnapshotChunk', data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ApplySnapshotChunk', data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'rook.game';\nexport var Direction;\n(function (Direction) {\n    Direction[Direction[\"LEFT\"] = 0] = \"LEFT\";\n    Direction[Direction[\"RIGHT\"] = 1] = \"RIGHT\";\n    Direction[Direction[\"UP\"] = 2] = \"UP\";\n    Direction[Direction[\"DOWN\"] = 3] = \"DOWN\";\n    Direction[Direction[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Direction || (Direction = {}));\nexport function directionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'LEFT':\n            return Direction.LEFT;\n        case 1:\n        case 'RIGHT':\n            return Direction.RIGHT;\n        case 2:\n        case 'UP':\n            return Direction.UP;\n        case 3:\n        case 'DOWN':\n            return Direction.DOWN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Direction.UNRECOGNIZED;\n    }\n}\nexport function directionToJSON(object) {\n    switch (object) {\n        case Direction.LEFT:\n            return 'LEFT';\n        case Direction.RIGHT:\n            return 'RIGHT';\n        case Direction.UP:\n            return 'UP';\n        case Direction.DOWN:\n            return 'DOWN';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var Landscape;\n(function (Landscape) {\n    Landscape[Landscape[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    Landscape[Landscape[\"PLAINS\"] = 1] = \"PLAINS\";\n    Landscape[Landscape[\"FOREST\"] = 2] = \"FOREST\";\n    Landscape[Landscape[\"MOUNTAINS\"] = 3] = \"MOUNTAINS\";\n    Landscape[Landscape[\"LAKE\"] = 4] = \"LAKE\";\n    Landscape[Landscape[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Landscape || (Landscape = {}));\nexport function landscapeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return Landscape.UNKNOWN;\n        case 1:\n        case 'PLAINS':\n            return Landscape.PLAINS;\n        case 2:\n        case 'FOREST':\n            return Landscape.FOREST;\n        case 3:\n        case 'MOUNTAINS':\n            return Landscape.MOUNTAINS;\n        case 4:\n        case 'LAKE':\n            return Landscape.LAKE;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Landscape.UNRECOGNIZED;\n    }\n}\nexport function landscapeToJSON(object) {\n    switch (object) {\n        case Landscape.UNKNOWN:\n            return 'UNKNOWN';\n        case Landscape.PLAINS:\n            return 'PLAINS';\n        case Landscape.FOREST:\n            return 'FOREST';\n        case Landscape.MOUNTAINS:\n            return 'MOUNTAINS';\n        case Landscape.LAKE:\n            return 'LAKE';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var Settlement;\n(function (Settlement) {\n    Settlement[Settlement[\"NONE\"] = 0] = \"NONE\";\n    Settlement[Settlement[\"TOWN\"] = 1] = \"TOWN\";\n    Settlement[Settlement[\"CITY\"] = 2] = \"CITY\";\n    Settlement[Settlement[\"CAPITAL\"] = 3] = \"CAPITAL\";\n    Settlement[Settlement[\"LUMBERMILL\"] = 4] = \"LUMBERMILL\";\n    Settlement[Settlement[\"QUARRY\"] = 5] = \"QUARRY\";\n    Settlement[Settlement[\"FARM\"] = 6] = \"FARM\";\n    Settlement[Settlement[\"ROOK\"] = 7] = \"ROOK\";\n    Settlement[Settlement[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Settlement || (Settlement = {}));\nexport function settlementFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NONE':\n            return Settlement.NONE;\n        case 1:\n        case 'TOWN':\n            return Settlement.TOWN;\n        case 2:\n        case 'CITY':\n            return Settlement.CITY;\n        case 3:\n        case 'CAPITAL':\n            return Settlement.CAPITAL;\n        case 4:\n        case 'LUMBERMILL':\n            return Settlement.LUMBERMILL;\n        case 5:\n        case 'QUARRY':\n            return Settlement.QUARRY;\n        case 6:\n        case 'FARM':\n            return Settlement.FARM;\n        case 7:\n        case 'ROOK':\n            return Settlement.ROOK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Settlement.UNRECOGNIZED;\n    }\n}\nexport function settlementToJSON(object) {\n    switch (object) {\n        case Settlement.NONE:\n            return 'NONE';\n        case Settlement.TOWN:\n            return 'TOWN';\n        case Settlement.CITY:\n            return 'CITY';\n        case Settlement.CAPITAL:\n            return 'CAPITAL';\n        case Settlement.LUMBERMILL:\n            return 'LUMBERMILL';\n        case Settlement.QUARRY:\n            return 'QUARRY';\n        case Settlement.FARM:\n            return 'FARM';\n        case Settlement.ROOK:\n            return 'ROOK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseMap = { width: 0 };\nexport const Map = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.tiles) {\n            Tile.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.width !== 0) {\n            writer.uint32(16).uint32(message.width);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMap };\n        message.tiles = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tiles.push(Tile.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.width = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMap };\n        message.tiles = [];\n        if (object.tiles !== undefined && object.tiles !== null) {\n            for (const e of object.tiles) {\n                message.tiles.push(Tile.fromJSON(e));\n            }\n        }\n        if (object.width !== undefined && object.width !== null) {\n            message.width = Number(object.width);\n        }\n        else {\n            message.width = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.tiles) {\n            obj.tiles = message.tiles.map((e) => (e ? Tile.toJSON(e) : undefined));\n        }\n        else {\n            obj.tiles = [];\n        }\n        message.width !== undefined && (obj.width = message.width);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMap };\n        message.tiles = [];\n        if (object.tiles !== undefined && object.tiles !== null) {\n            for (const e of object.tiles) {\n                message.tiles.push(Tile.fromPartial(e));\n            }\n        }\n        if (object.width !== undefined && object.width !== null) {\n            message.width = object.width;\n        }\n        else {\n            message.width = 0;\n        }\n        return message;\n    }\n};\nconst baseTile = { landscape: 0, faction: '' };\nexport const Tile = {\n    encode(message, writer = Writer.create()) {\n        if (message.landscape !== 0) {\n            writer.uint32(8).int32(message.landscape);\n        }\n        if (message.faction !== '') {\n            writer.uint32(18).string(message.faction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.landscape = reader.int32();\n                    break;\n                case 2:\n                    message.faction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTile };\n        if (object.landscape !== undefined && object.landscape !== null) {\n            message.landscape = landscapeFromJSON(object.landscape);\n        }\n        else {\n            message.landscape = 0;\n        }\n        if (object.faction !== undefined && object.faction !== null) {\n            message.faction = String(object.faction);\n        }\n        else {\n            message.faction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.landscape !== undefined && (obj.landscape = landscapeToJSON(message.landscape));\n        message.faction !== undefined && (obj.faction = message.faction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTile };\n        if (object.landscape !== undefined && object.landscape !== null) {\n            message.landscape = object.landscape;\n        }\n        else {\n            message.landscape = 0;\n        }\n        if (object.faction !== undefined && object.faction !== null) {\n            message.faction = object.faction;\n        }\n        else {\n            message.faction = '';\n        }\n        return message;\n    }\n};\nconst baseFaction = {};\nexport const Faction = {\n    encode(message, writer = Writer.create()) {\n        if (message.resources !== undefined) {\n            ResourceSet.encode(message.resources, writer.uint32(10).fork()).ldelim();\n        }\n        Object.entries(message.population).forEach(([key, value]) => {\n            Faction_PopulationEntry.encode({ key: key, value }, writer.uint32(18).fork()).ldelim();\n        });\n        Object.entries(message.settlements).forEach(([key, value]) => {\n            Faction_SettlementsEntry.encode({ key: key, value }, writer.uint32(26).fork()).ldelim();\n        });\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFaction };\n        message.population = {};\n        message.settlements = {};\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.resources = ResourceSet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    const entry2 = Faction_PopulationEntry.decode(reader, reader.uint32());\n                    if (entry2.value !== undefined) {\n                        message.population[entry2.key] = entry2.value;\n                    }\n                    break;\n                case 3:\n                    const entry3 = Faction_SettlementsEntry.decode(reader, reader.uint32());\n                    if (entry3.value !== undefined) {\n                        message.settlements[entry3.key] = entry3.value;\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFaction };\n        message.population = {};\n        message.settlements = {};\n        if (object.resources !== undefined && object.resources !== null) {\n            message.resources = ResourceSet.fromJSON(object.resources);\n        }\n        else {\n            message.resources = undefined;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            Object.entries(object.population).forEach(([key, value]) => {\n                message.population[Number(key)] = Number(value);\n            });\n        }\n        if (object.settlements !== undefined && object.settlements !== null) {\n            Object.entries(object.settlements).forEach(([key, value]) => {\n                message.settlements[Number(key)] = value;\n            });\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.resources !== undefined && (obj.resources = message.resources ? ResourceSet.toJSON(message.resources) : undefined);\n        obj.population = {};\n        if (message.population) {\n            Object.entries(message.population).forEach(([k, v]) => {\n                obj.population[k] = v;\n            });\n        }\n        obj.settlements = {};\n        if (message.settlements) {\n            Object.entries(message.settlements).forEach(([k, v]) => {\n                obj.settlements[k] = settlementToJSON(v);\n            });\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFaction };\n        message.population = {};\n        message.settlements = {};\n        if (object.resources !== undefined && object.resources !== null) {\n            message.resources = ResourceSet.fromPartial(object.resources);\n        }\n        else {\n            message.resources = undefined;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            Object.entries(object.population).forEach(([key, value]) => {\n                if (value !== undefined) {\n                    message.population[Number(key)] = Number(value);\n                }\n            });\n        }\n        if (object.settlements !== undefined && object.settlements !== null) {\n            Object.entries(object.settlements).forEach(([key, value]) => {\n                if (value !== undefined) {\n                    message.settlements[Number(key)] = value;\n                }\n            });\n        }\n        return message;\n    }\n};\nconst baseFaction_PopulationEntry = { key: 0, value: 0 };\nexport const Faction_PopulationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== 0) {\n            writer.uint32(8).uint32(message.key);\n        }\n        if (message.value !== 0) {\n            writer.uint32(16).uint32(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFaction_PopulationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.uint32();\n                    break;\n                case 2:\n                    message.value = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFaction_PopulationEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = Number(object.key);\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Number(object.value);\n        }\n        else {\n            message.value = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFaction_PopulationEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = 0;\n        }\n        return message;\n    }\n};\nconst baseFaction_SettlementsEntry = { key: 0, value: 0 };\nexport const Faction_SettlementsEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== 0) {\n            writer.uint32(8).uint32(message.key);\n        }\n        if (message.value !== 0) {\n            writer.uint32(16).int32(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFaction_SettlementsEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.uint32();\n                    break;\n                case 2:\n                    message.value = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFaction_SettlementsEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = Number(object.key);\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = settlementFromJSON(object.value);\n        }\n        else {\n            message.value = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = settlementToJSON(message.value));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFaction_SettlementsEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = 0;\n        }\n        return message;\n    }\n};\nconst basePosition = { x: 0, y: 0 };\nexport const Position = {\n    encode(message, writer = Writer.create()) {\n        if (message.x !== 0) {\n            writer.uint32(24).uint32(message.x);\n        }\n        if (message.y !== 0) {\n            writer.uint32(32).uint32(message.y);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePosition };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 3:\n                    message.x = reader.uint32();\n                    break;\n                case 4:\n                    message.y = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePosition };\n        if (object.x !== undefined && object.x !== null) {\n            message.x = Number(object.x);\n        }\n        else {\n            message.x = 0;\n        }\n        if (object.y !== undefined && object.y !== null) {\n            message.y = Number(object.y);\n        }\n        else {\n            message.y = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.x !== undefined && (obj.x = message.x);\n        message.y !== undefined && (obj.y = message.y);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePosition };\n        if (object.x !== undefined && object.x !== null) {\n            message.x = object.x;\n        }\n        else {\n            message.x = 0;\n        }\n        if (object.y !== undefined && object.y !== null) {\n            message.y = object.y;\n        }\n        else {\n            message.y = 0;\n        }\n        return message;\n    }\n};\nconst baseResourceSet = { food: 0, stone: 0, wood: 0, population: 0 };\nexport const ResourceSet = {\n    encode(message, writer = Writer.create()) {\n        if (message.food !== 0) {\n            writer.uint32(8).uint32(message.food);\n        }\n        if (message.stone !== 0) {\n            writer.uint32(16).uint32(message.stone);\n        }\n        if (message.wood !== 0) {\n            writer.uint32(24).uint32(message.wood);\n        }\n        if (message.population !== 0) {\n            writer.uint32(32).uint32(message.population);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResourceSet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.food = reader.uint32();\n                    break;\n                case 2:\n                    message.stone = reader.uint32();\n                    break;\n                case 3:\n                    message.wood = reader.uint32();\n                    break;\n                case 4:\n                    message.population = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResourceSet };\n        if (object.food !== undefined && object.food !== null) {\n            message.food = Number(object.food);\n        }\n        else {\n            message.food = 0;\n        }\n        if (object.stone !== undefined && object.stone !== null) {\n            message.stone = Number(object.stone);\n        }\n        else {\n            message.stone = 0;\n        }\n        if (object.wood !== undefined && object.wood !== null) {\n            message.wood = Number(object.wood);\n        }\n        else {\n            message.wood = 0;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            message.population = Number(object.population);\n        }\n        else {\n            message.population = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.food !== undefined && (obj.food = message.food);\n        message.stone !== undefined && (obj.stone = message.stone);\n        message.wood !== undefined && (obj.wood = message.wood);\n        message.population !== undefined && (obj.population = message.population);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResourceSet };\n        if (object.food !== undefined && object.food !== null) {\n            message.food = object.food;\n        }\n        else {\n            message.food = 0;\n        }\n        if (object.stone !== undefined && object.stone !== null) {\n            message.stone = object.stone;\n        }\n        else {\n            message.stone = 0;\n        }\n        if (object.wood !== undefined && object.wood !== null) {\n            message.wood = object.wood;\n        }\n        else {\n            message.wood = 0;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            message.population = object.population;\n        }\n        else {\n            message.population = 0;\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Faction, Map } from '../../rook/game/types';\nimport { GameConfig } from '../../rook/game/config';\nexport const protobufPackage = 'rook.game';\nconst baseGame = { step: 0 };\nexport const Game = {\n    encode(message, writer = Writer.create()) {\n        Object.entries(message.players).forEach(([key, value]) => {\n            Game_PlayersEntry.encode({ key: key, value }, writer.uint32(10).fork()).ldelim();\n        });\n        if (message.config !== undefined) {\n            GameConfig.encode(message.config, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.step !== 0) {\n            writer.uint32(24).uint64(message.step);\n        }\n        if (message.map !== undefined) {\n            Map.encode(message.map, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGame };\n        message.players = {};\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    const entry1 = Game_PlayersEntry.decode(reader, reader.uint32());\n                    if (entry1.value !== undefined) {\n                        message.players[entry1.key] = entry1.value;\n                    }\n                    break;\n                case 2:\n                    message.config = GameConfig.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.step = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.map = Map.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGame };\n        message.players = {};\n        if (object.players !== undefined && object.players !== null) {\n            Object.entries(object.players).forEach(([key, value]) => {\n                message.players[key] = Faction.fromJSON(value);\n            });\n        }\n        if (object.config !== undefined && object.config !== null) {\n            message.config = GameConfig.fromJSON(object.config);\n        }\n        else {\n            message.config = undefined;\n        }\n        if (object.step !== undefined && object.step !== null) {\n            message.step = Number(object.step);\n        }\n        else {\n            message.step = 0;\n        }\n        if (object.map !== undefined && object.map !== null) {\n            message.map = Map.fromJSON(object.map);\n        }\n        else {\n            message.map = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        obj.players = {};\n        if (message.players) {\n            Object.entries(message.players).forEach(([k, v]) => {\n                obj.players[k] = Faction.toJSON(v);\n            });\n        }\n        message.config !== undefined && (obj.config = message.config ? GameConfig.toJSON(message.config) : undefined);\n        message.step !== undefined && (obj.step = message.step);\n        message.map !== undefined && (obj.map = message.map ? Map.toJSON(message.map) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGame };\n        message.players = {};\n        if (object.players !== undefined && object.players !== null) {\n            Object.entries(object.players).forEach(([key, value]) => {\n                if (value !== undefined) {\n                    message.players[key] = Faction.fromPartial(value);\n                }\n            });\n        }\n        if (object.config !== undefined && object.config !== null) {\n            message.config = GameConfig.fromPartial(object.config);\n        }\n        else {\n            message.config = undefined;\n        }\n        if (object.step !== undefined && object.step !== null) {\n            message.step = object.step;\n        }\n        else {\n            message.step = 0;\n        }\n        if (object.map !== undefined && object.map !== null) {\n            message.map = Map.fromPartial(object.map);\n        }\n        else {\n            message.map = undefined;\n        }\n        return message;\n    }\n};\nconst baseGame_PlayersEntry = { key: '' };\nexport const Game_PlayersEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== undefined) {\n            Faction.encode(message.value, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGame_PlayersEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = Faction.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGame_PlayersEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Faction.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value ? Faction.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGame_PlayersEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Faction.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Position, directionFromJSON, directionToJSON, settlementFromJSON, settlementToJSON } from '../../rook/game/types';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { GameConfig } from '../../rook/game/config';\nexport const protobufPackage = 'rook.game';\nconst baseMsgMove = { creator: '', gameId: 0, direction: 0, population: 0 };\nexport const MsgMove = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.gameId !== 0) {\n            writer.uint32(16).uint64(message.gameId);\n        }\n        if (message.position !== undefined) {\n            Position.encode(message.position, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.direction !== 0) {\n            writer.uint32(32).int32(message.direction);\n        }\n        if (message.population !== 0) {\n            writer.uint32(40).uint32(message.population);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMove };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.gameId = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.position = Position.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.direction = reader.int32();\n                    break;\n                case 5:\n                    message.population = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMove };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = Number(object.gameId);\n        }\n        else {\n            message.gameId = 0;\n        }\n        if (object.position !== undefined && object.position !== null) {\n            message.position = Position.fromJSON(object.position);\n        }\n        else {\n            message.position = undefined;\n        }\n        if (object.direction !== undefined && object.direction !== null) {\n            message.direction = directionFromJSON(object.direction);\n        }\n        else {\n            message.direction = 0;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            message.population = Number(object.population);\n        }\n        else {\n            message.population = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.gameId !== undefined && (obj.gameId = message.gameId);\n        message.position !== undefined && (obj.position = message.position ? Position.toJSON(message.position) : undefined);\n        message.direction !== undefined && (obj.direction = directionToJSON(message.direction));\n        message.population !== undefined && (obj.population = message.population);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMove };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = object.gameId;\n        }\n        else {\n            message.gameId = 0;\n        }\n        if (object.position !== undefined && object.position !== null) {\n            message.position = Position.fromPartial(object.position);\n        }\n        else {\n            message.position = undefined;\n        }\n        if (object.direction !== undefined && object.direction !== null) {\n            message.direction = object.direction;\n        }\n        else {\n            message.direction = 0;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            message.population = object.population;\n        }\n        else {\n            message.population = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMoveResponse = {};\nexport const MsgMoveResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMoveResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMoveResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMoveResponse };\n        return message;\n    }\n};\nconst baseMsgBuild = { creator: '', gameId: 0, settlement: 0 };\nexport const MsgBuild = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.gameId !== 0) {\n            writer.uint32(16).uint64(message.gameId);\n        }\n        if (message.settlement !== 0) {\n            writer.uint32(24).int32(message.settlement);\n        }\n        if (message.position !== undefined) {\n            Position.encode(message.position, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBuild };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.gameId = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.settlement = reader.int32();\n                    break;\n                case 4:\n                    message.position = Position.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBuild };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = Number(object.gameId);\n        }\n        else {\n            message.gameId = 0;\n        }\n        if (object.settlement !== undefined && object.settlement !== null) {\n            message.settlement = settlementFromJSON(object.settlement);\n        }\n        else {\n            message.settlement = 0;\n        }\n        if (object.position !== undefined && object.position !== null) {\n            message.position = Position.fromJSON(object.position);\n        }\n        else {\n            message.position = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.gameId !== undefined && (obj.gameId = message.gameId);\n        message.settlement !== undefined && (obj.settlement = settlementToJSON(message.settlement));\n        message.position !== undefined && (obj.position = message.position ? Position.toJSON(message.position) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBuild };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = object.gameId;\n        }\n        else {\n            message.gameId = 0;\n        }\n        if (object.settlement !== undefined && object.settlement !== null) {\n            message.settlement = object.settlement;\n        }\n        else {\n            message.settlement = 0;\n        }\n        if (object.position !== undefined && object.position !== null) {\n            message.position = Position.fromPartial(object.position);\n        }\n        else {\n            message.position = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBuildResponse = {};\nexport const MsgBuildResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBuildResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBuildResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBuildResponse };\n        return message;\n    }\n};\nconst baseMsgCreate = { players: '' };\nexport const MsgCreate = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.players) {\n            writer.uint32(18).string(v);\n        }\n        if (message.config !== undefined) {\n            GameConfig.encode(message.config, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreate };\n        message.players = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.players.push(reader.string());\n                    break;\n                case 3:\n                    message.config = GameConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreate };\n        message.players = [];\n        if (object.players !== undefined && object.players !== null) {\n            for (const e of object.players) {\n                message.players.push(String(e));\n            }\n        }\n        if (object.config !== undefined && object.config !== null) {\n            message.config = GameConfig.fromJSON(object.config);\n        }\n        else {\n            message.config = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.players) {\n            obj.players = message.players.map((e) => e);\n        }\n        else {\n            obj.players = [];\n        }\n        message.config !== undefined && (obj.config = message.config ? GameConfig.toJSON(message.config) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreate };\n        message.players = [];\n        if (object.players !== undefined && object.players !== null) {\n            for (const e of object.players) {\n                message.players.push(e);\n            }\n        }\n        if (object.config !== undefined && object.config !== null) {\n            message.config = GameConfig.fromPartial(object.config);\n        }\n        else {\n            message.config = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateResponse = { gameId: 0 };\nexport const MsgCreateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gameId !== 0) {\n            writer.uint32(8).uint64(message.gameId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gameId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateResponse };\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = Number(object.gameId);\n        }\n        else {\n            message.gameId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gameId !== undefined && (obj.gameId = message.gameId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateResponse };\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = object.gameId;\n        }\n        else {\n            message.gameId = 0;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Move(request) {\n        const data = MsgMove.encode(request).finish();\n        const promise = this.rpc.request('rook.game.Msg', 'Move', data);\n        return promise.then((data) => MsgMoveResponse.decode(new Reader(data)));\n    }\n    Build(request) {\n        const data = MsgBuild.encode(request).finish();\n        const promise = this.rpc.request('rook.game.Msg', 'Build', data);\n        return promise.then((data) => MsgBuildResponse.decode(new Reader(data)));\n    }\n    Create(request) {\n        const data = MsgCreate.encode(request).finish();\n        const promise = this.rpc.request('rook.game.Msg', 'Create', data);\n        return promise.then((data) => MsgCreateResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cmwaters.rook.rook';\nexport var Direction;\n(function (Direction) {\n    Direction[Direction[\"LEFT\"] = 0] = \"LEFT\";\n    Direction[Direction[\"RIGHT\"] = 1] = \"RIGHT\";\n    Direction[Direction[\"UP\"] = 2] = \"UP\";\n    Direction[Direction[\"DOWN\"] = 3] = \"DOWN\";\n    Direction[Direction[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Direction || (Direction = {}));\nexport function directionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'LEFT':\n            return Direction.LEFT;\n        case 1:\n        case 'RIGHT':\n            return Direction.RIGHT;\n        case 2:\n        case 'UP':\n            return Direction.UP;\n        case 3:\n        case 'DOWN':\n            return Direction.DOWN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Direction.UNRECOGNIZED;\n    }\n}\nexport function directionToJSON(object) {\n    switch (object) {\n        case Direction.LEFT:\n            return 'LEFT';\n        case Direction.RIGHT:\n            return 'RIGHT';\n        case Direction.UP:\n            return 'UP';\n        case Direction.DOWN:\n            return 'DOWN';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var Landscape;\n(function (Landscape) {\n    Landscape[Landscape[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    Landscape[Landscape[\"PLAINS\"] = 1] = \"PLAINS\";\n    Landscape[Landscape[\"FOREST\"] = 2] = \"FOREST\";\n    Landscape[Landscape[\"MOUNTAINS\"] = 3] = \"MOUNTAINS\";\n    Landscape[Landscape[\"LAKE\"] = 4] = \"LAKE\";\n    Landscape[Landscape[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Landscape || (Landscape = {}));\nexport function landscapeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return Landscape.UNKNOWN;\n        case 1:\n        case 'PLAINS':\n            return Landscape.PLAINS;\n        case 2:\n        case 'FOREST':\n            return Landscape.FOREST;\n        case 3:\n        case 'MOUNTAINS':\n            return Landscape.MOUNTAINS;\n        case 4:\n        case 'LAKE':\n            return Landscape.LAKE;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Landscape.UNRECOGNIZED;\n    }\n}\nexport function landscapeToJSON(object) {\n    switch (object) {\n        case Landscape.UNKNOWN:\n            return 'UNKNOWN';\n        case Landscape.PLAINS:\n            return 'PLAINS';\n        case Landscape.FOREST:\n            return 'FOREST';\n        case Landscape.MOUNTAINS:\n            return 'MOUNTAINS';\n        case Landscape.LAKE:\n            return 'LAKE';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var Settlement;\n(function (Settlement) {\n    Settlement[Settlement[\"NONE\"] = 0] = \"NONE\";\n    Settlement[Settlement[\"TOWN\"] = 1] = \"TOWN\";\n    Settlement[Settlement[\"CITY\"] = 2] = \"CITY\";\n    Settlement[Settlement[\"CAPITAL\"] = 3] = \"CAPITAL\";\n    Settlement[Settlement[\"LUMBERMILL\"] = 4] = \"LUMBERMILL\";\n    Settlement[Settlement[\"QUARRY\"] = 5] = \"QUARRY\";\n    Settlement[Settlement[\"FARM\"] = 6] = \"FARM\";\n    Settlement[Settlement[\"ROOK\"] = 7] = \"ROOK\";\n    Settlement[Settlement[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Settlement || (Settlement = {}));\nexport function settlementFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NONE':\n            return Settlement.NONE;\n        case 1:\n        case 'TOWN':\n            return Settlement.TOWN;\n        case 2:\n        case 'CITY':\n            return Settlement.CITY;\n        case 3:\n        case 'CAPITAL':\n            return Settlement.CAPITAL;\n        case 4:\n        case 'LUMBERMILL':\n            return Settlement.LUMBERMILL;\n        case 5:\n        case 'QUARRY':\n            return Settlement.QUARRY;\n        case 6:\n        case 'FARM':\n            return Settlement.FARM;\n        case 7:\n        case 'ROOK':\n            return Settlement.ROOK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Settlement.UNRECOGNIZED;\n    }\n}\nexport function settlementToJSON(object) {\n    switch (object) {\n        case Settlement.NONE:\n            return 'NONE';\n        case Settlement.TOWN:\n            return 'TOWN';\n        case Settlement.CITY:\n            return 'CITY';\n        case Settlement.CAPITAL:\n            return 'CAPITAL';\n        case Settlement.LUMBERMILL:\n            return 'LUMBERMILL';\n        case Settlement.QUARRY:\n            return 'QUARRY';\n        case Settlement.FARM:\n            return 'FARM';\n        case Settlement.ROOK:\n            return 'ROOK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseMap = { width: 0 };\nexport const Map = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.tiles) {\n            Tile.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.width !== 0) {\n            writer.uint32(16).uint32(message.width);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMap };\n        message.tiles = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tiles.push(Tile.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.width = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMap };\n        message.tiles = [];\n        if (object.tiles !== undefined && object.tiles !== null) {\n            for (const e of object.tiles) {\n                message.tiles.push(Tile.fromJSON(e));\n            }\n        }\n        if (object.width !== undefined && object.width !== null) {\n            message.width = Number(object.width);\n        }\n        else {\n            message.width = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.tiles) {\n            obj.tiles = message.tiles.map((e) => (e ? Tile.toJSON(e) : undefined));\n        }\n        else {\n            obj.tiles = [];\n        }\n        message.width !== undefined && (obj.width = message.width);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMap };\n        message.tiles = [];\n        if (object.tiles !== undefined && object.tiles !== null) {\n            for (const e of object.tiles) {\n                message.tiles.push(Tile.fromPartial(e));\n            }\n        }\n        if (object.width !== undefined && object.width !== null) {\n            message.width = object.width;\n        }\n        else {\n            message.width = 0;\n        }\n        return message;\n    }\n};\nconst baseTile = { landscape: 0, faction: '' };\nexport const Tile = {\n    encode(message, writer = Writer.create()) {\n        if (message.landscape !== 0) {\n            writer.uint32(8).int32(message.landscape);\n        }\n        if (message.faction !== '') {\n            writer.uint32(18).string(message.faction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.landscape = reader.int32();\n                    break;\n                case 2:\n                    message.faction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTile };\n        if (object.landscape !== undefined && object.landscape !== null) {\n            message.landscape = landscapeFromJSON(object.landscape);\n        }\n        else {\n            message.landscape = 0;\n        }\n        if (object.faction !== undefined && object.faction !== null) {\n            message.faction = String(object.faction);\n        }\n        else {\n            message.faction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.landscape !== undefined && (obj.landscape = landscapeToJSON(message.landscape));\n        message.faction !== undefined && (obj.faction = message.faction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTile };\n        if (object.landscape !== undefined && object.landscape !== null) {\n            message.landscape = object.landscape;\n        }\n        else {\n            message.landscape = 0;\n        }\n        if (object.faction !== undefined && object.faction !== null) {\n            message.faction = object.faction;\n        }\n        else {\n            message.faction = '';\n        }\n        return message;\n    }\n};\nconst baseFaction = {};\nexport const Faction = {\n    encode(message, writer = Writer.create()) {\n        if (message.resources !== undefined) {\n            ResourceSet.encode(message.resources, writer.uint32(10).fork()).ldelim();\n        }\n        Object.entries(message.population).forEach(([key, value]) => {\n            Faction_PopulationEntry.encode({ key: key, value }, writer.uint32(18).fork()).ldelim();\n        });\n        Object.entries(message.settlements).forEach(([key, value]) => {\n            Faction_SettlementsEntry.encode({ key: key, value }, writer.uint32(26).fork()).ldelim();\n        });\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFaction };\n        message.population = {};\n        message.settlements = {};\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.resources = ResourceSet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    const entry2 = Faction_PopulationEntry.decode(reader, reader.uint32());\n                    if (entry2.value !== undefined) {\n                        message.population[entry2.key] = entry2.value;\n                    }\n                    break;\n                case 3:\n                    const entry3 = Faction_SettlementsEntry.decode(reader, reader.uint32());\n                    if (entry3.value !== undefined) {\n                        message.settlements[entry3.key] = entry3.value;\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFaction };\n        message.population = {};\n        message.settlements = {};\n        if (object.resources !== undefined && object.resources !== null) {\n            message.resources = ResourceSet.fromJSON(object.resources);\n        }\n        else {\n            message.resources = undefined;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            Object.entries(object.population).forEach(([key, value]) => {\n                message.population[Number(key)] = Number(value);\n            });\n        }\n        if (object.settlements !== undefined && object.settlements !== null) {\n            Object.entries(object.settlements).forEach(([key, value]) => {\n                message.settlements[Number(key)] = value;\n            });\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.resources !== undefined && (obj.resources = message.resources ? ResourceSet.toJSON(message.resources) : undefined);\n        obj.population = {};\n        if (message.population) {\n            Object.entries(message.population).forEach(([k, v]) => {\n                obj.population[k] = v;\n            });\n        }\n        obj.settlements = {};\n        if (message.settlements) {\n            Object.entries(message.settlements).forEach(([k, v]) => {\n                obj.settlements[k] = settlementToJSON(v);\n            });\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFaction };\n        message.population = {};\n        message.settlements = {};\n        if (object.resources !== undefined && object.resources !== null) {\n            message.resources = ResourceSet.fromPartial(object.resources);\n        }\n        else {\n            message.resources = undefined;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            Object.entries(object.population).forEach(([key, value]) => {\n                if (value !== undefined) {\n                    message.population[Number(key)] = Number(value);\n                }\n            });\n        }\n        if (object.settlements !== undefined && object.settlements !== null) {\n            Object.entries(object.settlements).forEach(([key, value]) => {\n                if (value !== undefined) {\n                    message.settlements[Number(key)] = value;\n                }\n            });\n        }\n        return message;\n    }\n};\nconst baseFaction_PopulationEntry = { key: 0, value: 0 };\nexport const Faction_PopulationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== 0) {\n            writer.uint32(8).uint32(message.key);\n        }\n        if (message.value !== 0) {\n            writer.uint32(16).uint32(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFaction_PopulationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.uint32();\n                    break;\n                case 2:\n                    message.value = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFaction_PopulationEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = Number(object.key);\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Number(object.value);\n        }\n        else {\n            message.value = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFaction_PopulationEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = 0;\n        }\n        return message;\n    }\n};\nconst baseFaction_SettlementsEntry = { key: 0, value: 0 };\nexport const Faction_SettlementsEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== 0) {\n            writer.uint32(8).uint32(message.key);\n        }\n        if (message.value !== 0) {\n            writer.uint32(16).int32(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFaction_SettlementsEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.uint32();\n                    break;\n                case 2:\n                    message.value = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFaction_SettlementsEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = Number(object.key);\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = settlementFromJSON(object.value);\n        }\n        else {\n            message.value = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = settlementToJSON(message.value));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFaction_SettlementsEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = 0;\n        }\n        return message;\n    }\n};\nconst basePosition = { x: 0, y: 0 };\nexport const Position = {\n    encode(message, writer = Writer.create()) {\n        if (message.x !== 0) {\n            writer.uint32(24).uint32(message.x);\n        }\n        if (message.y !== 0) {\n            writer.uint32(32).uint32(message.y);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePosition };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 3:\n                    message.x = reader.uint32();\n                    break;\n                case 4:\n                    message.y = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePosition };\n        if (object.x !== undefined && object.x !== null) {\n            message.x = Number(object.x);\n        }\n        else {\n            message.x = 0;\n        }\n        if (object.y !== undefined && object.y !== null) {\n            message.y = Number(object.y);\n        }\n        else {\n            message.y = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.x !== undefined && (obj.x = message.x);\n        message.y !== undefined && (obj.y = message.y);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePosition };\n        if (object.x !== undefined && object.x !== null) {\n            message.x = object.x;\n        }\n        else {\n            message.x = 0;\n        }\n        if (object.y !== undefined && object.y !== null) {\n            message.y = object.y;\n        }\n        else {\n            message.y = 0;\n        }\n        return message;\n    }\n};\nconst baseResourceSet = { food: 0, stone: 0, wood: 0, population: 0 };\nexport const ResourceSet = {\n    encode(message, writer = Writer.create()) {\n        if (message.food !== 0) {\n            writer.uint32(8).uint32(message.food);\n        }\n        if (message.stone !== 0) {\n            writer.uint32(16).uint32(message.stone);\n        }\n        if (message.wood !== 0) {\n            writer.uint32(24).uint32(message.wood);\n        }\n        if (message.population !== 0) {\n            writer.uint32(32).uint32(message.population);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResourceSet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.food = reader.uint32();\n                    break;\n                case 2:\n                    message.stone = reader.uint32();\n                    break;\n                case 3:\n                    message.wood = reader.uint32();\n                    break;\n                case 4:\n                    message.population = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResourceSet };\n        if (object.food !== undefined && object.food !== null) {\n            message.food = Number(object.food);\n        }\n        else {\n            message.food = 0;\n        }\n        if (object.stone !== undefined && object.stone !== null) {\n            message.stone = Number(object.stone);\n        }\n        else {\n            message.stone = 0;\n        }\n        if (object.wood !== undefined && object.wood !== null) {\n            message.wood = Number(object.wood);\n        }\n        else {\n            message.wood = 0;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            message.population = Number(object.population);\n        }\n        else {\n            message.population = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.food !== undefined && (obj.food = message.food);\n        message.stone !== undefined && (obj.stone = message.stone);\n        message.wood !== undefined && (obj.wood = message.wood);\n        message.population !== undefined && (obj.population = message.population);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResourceSet };\n        if (object.food !== undefined && object.food !== null) {\n            message.food = object.food;\n        }\n        else {\n            message.food = 0;\n        }\n        if (object.stone !== undefined && object.stone !== null) {\n            message.stone = object.stone;\n        }\n        else {\n            message.stone = 0;\n        }\n        if (object.wood !== undefined && object.wood !== null) {\n            message.wood = object.wood;\n        }\n        else {\n            message.wood = 0;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            message.population = object.population;\n        }\n        else {\n            message.population = 0;\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../google/protobuf/duration';\nexport const protobufPackage = 'tendermint.types';\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    }\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorParams = { pubKeyTypes: '' };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined && (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: '' };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== '') {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { BaseAccount } from '../../../cosmos/auth/v1beta1/auth';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    }\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    }\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Faction, Map } from '../rook/types';\nimport { GameConfig } from '../rook/config';\nexport const protobufPackage = 'cmwaters.rook.rook';\nconst baseGame = { step: 0 };\nexport const Game = {\n    encode(message, writer = Writer.create()) {\n        Object.entries(message.players).forEach(([key, value]) => {\n            Game_PlayersEntry.encode({ key: key, value }, writer.uint32(10).fork()).ldelim();\n        });\n        if (message.config !== undefined) {\n            GameConfig.encode(message.config, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.step !== 0) {\n            writer.uint32(24).uint64(message.step);\n        }\n        if (message.map !== undefined) {\n            Map.encode(message.map, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGame };\n        message.players = {};\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    const entry1 = Game_PlayersEntry.decode(reader, reader.uint32());\n                    if (entry1.value !== undefined) {\n                        message.players[entry1.key] = entry1.value;\n                    }\n                    break;\n                case 2:\n                    message.config = GameConfig.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.step = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.map = Map.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGame };\n        message.players = {};\n        if (object.players !== undefined && object.players !== null) {\n            Object.entries(object.players).forEach(([key, value]) => {\n                message.players[key] = Faction.fromJSON(value);\n            });\n        }\n        if (object.config !== undefined && object.config !== null) {\n            message.config = GameConfig.fromJSON(object.config);\n        }\n        else {\n            message.config = undefined;\n        }\n        if (object.step !== undefined && object.step !== null) {\n            message.step = Number(object.step);\n        }\n        else {\n            message.step = 0;\n        }\n        if (object.map !== undefined && object.map !== null) {\n            message.map = Map.fromJSON(object.map);\n        }\n        else {\n            message.map = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        obj.players = {};\n        if (message.players) {\n            Object.entries(message.players).forEach(([k, v]) => {\n                obj.players[k] = Faction.toJSON(v);\n            });\n        }\n        message.config !== undefined && (obj.config = message.config ? GameConfig.toJSON(message.config) : undefined);\n        message.step !== undefined && (obj.step = message.step);\n        message.map !== undefined && (obj.map = message.map ? Map.toJSON(message.map) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGame };\n        message.players = {};\n        if (object.players !== undefined && object.players !== null) {\n            Object.entries(object.players).forEach(([key, value]) => {\n                if (value !== undefined) {\n                    message.players[key] = Faction.fromPartial(value);\n                }\n            });\n        }\n        if (object.config !== undefined && object.config !== null) {\n            message.config = GameConfig.fromPartial(object.config);\n        }\n        else {\n            message.config = undefined;\n        }\n        if (object.step !== undefined && object.step !== null) {\n            message.step = object.step;\n        }\n        else {\n            message.step = 0;\n        }\n        if (object.map !== undefined && object.map !== null) {\n            message.map = Map.fromPartial(object.map);\n        }\n        else {\n            message.map = undefined;\n        }\n        return message;\n    }\n};\nconst baseGame_PlayersEntry = { key: '' };\nexport const Game_PlayersEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== undefined) {\n            Faction.encode(message.value, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGame_PlayersEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = Faction.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGame_PlayersEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Faction.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value ? Faction.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGame_PlayersEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Faction.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case 4:\n        case 'STATE_CLOSED':\n            return State.STATE_CLOSED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        case State.STATE_CLOSED:\n            return 'STATE_CLOSED';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'ORDER_NONE_UNSPECIFIED':\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case 'ORDER_UNORDERED':\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case 'ORDER_ORDERED':\n            return Order.ORDER_ORDERED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return 'ORDER_NONE_UNSPECIFIED';\n        case Order.ORDER_UNORDERED:\n            return 'ORDER_UNORDERED';\n        case Order.ORDER_ORDERED:\n            return 'ORDER_ORDERED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: ''\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    }\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: '',\n    portId: '',\n    channelId: ''\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== '') {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { portId: '', channelId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: '',\n    sourceChannel: '',\n    destinationPort: '',\n    destinationChannel: '',\n    timeoutTimestamp: 0\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== '') {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== '') {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== '') {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst basePacketState = { portId: '', channelId: '', sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Header } from '../../../tendermint/types/types';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BOND_STATUS_UNSPECIFIED':\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case 'BOND_STATUS_UNBONDED':\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case 'BOND_STATUS_UNBONDING':\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case 'BOND_STATUS_BONDED':\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return 'BOND_STATUS_UNSPECIFIED';\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return 'BOND_STATUS_UNBONDED';\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return 'BOND_STATUS_UNBONDING';\n        case BondStatus.BOND_STATUS_BONDED:\n            return 'BOND_STATUS_BONDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommissionRates = { rate: '', maxRate: '', maxChangeRate: '' };\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== '') {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== '') {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== '') {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    }\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseDescription = {\n    moniker: '',\n    identity: '',\n    website: '',\n    securityContact: '',\n    details: ''\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== '') {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== '') {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== '') {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== '') {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    }\n};\nconst baseValidator = {\n    operatorAddress: '',\n    jailed: false,\n    status: 0,\n    tokens: '',\n    delegatorShares: '',\n    unbondingHeight: 0,\n    minSelfDelegation: ''\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== '') {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== '') {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== '') {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseValAddresses = { addresses: '' };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseDVPair = { delegatorAddress: '', validatorAddress: '' };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDVVTriplet = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegation = {\n    delegatorAddress: '',\n    validatorAddress: '',\n    shares: ''\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== '') {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    balance: ''\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    sharesDst: ''\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== '') {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegation = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: ''\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== '') {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    }\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance ? Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntryResponse = { balance: '' };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePool = { notBondedTokens: '', bondedTokens: '' };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== '') {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== '') {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var GameDirection;\n(function (GameDirection) {\n    GameDirection[\"LEFT\"] = \"LEFT\";\n    GameDirection[\"RIGHT\"] = \"RIGHT\";\n    GameDirection[\"UP\"] = \"UP\";\n    GameDirection[\"DOWN\"] = \"DOWN\";\n})(GameDirection || (GameDirection = {}));\nexport var GameLandscape;\n(function (GameLandscape) {\n    GameLandscape[\"UNKNOWN\"] = \"UNKNOWN\";\n    GameLandscape[\"PLAINS\"] = \"PLAINS\";\n    GameLandscape[\"FOREST\"] = \"FOREST\";\n    GameLandscape[\"MOUNTAINS\"] = \"MOUNTAINS\";\n    GameLandscape[\"LAKE\"] = \"LAKE\";\n})(GameLandscape || (GameLandscape = {}));\nexport var GameSettlement;\n(function (GameSettlement) {\n    GameSettlement[\"NONE\"] = \"NONE\";\n    GameSettlement[\"TOWN\"] = \"TOWN\";\n    GameSettlement[\"CITY\"] = \"CITY\";\n    GameSettlement[\"CAPITAL\"] = \"CAPITAL\";\n    GameSettlement[\"LUMBERMILL\"] = \"LUMBERMILL\";\n    GameSettlement[\"QUARRY\"] = \"QUARRY\";\n    GameSettlement[\"FARM\"] = \"FARM\";\n    GameSettlement[\"ROOK\"] = \"ROOK\";\n})(GameSettlement || (GameSettlement = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title rook/game/config.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGame\n         * @summary Queries a game state by id.\n         * @request GET:/rook/game/{id}\n         */\n        this.queryGame = (id, params = {}) => this.request({\n            path: `/rook/game/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @request GET:/rook/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/rook/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreate } from \"./types/rook/game/tx\";\nimport { MsgMove } from \"./types/rook/game/tx\";\nimport { MsgBuild } from \"./types/rook/game/tx\";\nconst types = [\n    [\"/rook.game.MsgCreate\", MsgCreate],\n    [\"/rook.game.MsgMove\", MsgMove],\n    [\"/rook.game.MsgBuild\", MsgBuild],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreate: (data) => ({ typeUrl: \"/rook.game.MsgCreate\", value: data }),\n        msgMove: (data) => ({ typeUrl: \"/rook.game.MsgMove\", value: data }),\n        msgBuild: (data) => ({ typeUrl: \"/rook.game.MsgBuild\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { GameConfig } from \"./module/types/rook/game/config\";\nimport { MapConfig } from \"./module/types/rook/game/config\";\nimport { InitializationConfig } from \"./module/types/rook/game/config\";\nimport { Params } from \"./module/types/rook/game/config\";\nimport { Game } from \"./module/types/rook/game/state\";\nimport { Map } from \"./module/types/rook/game/types\";\nimport { Tile } from \"./module/types/rook/game/types\";\nimport { Faction } from \"./module/types/rook/game/types\";\nimport { Position } from \"./module/types/rook/game/types\";\nimport { ResourceSet } from \"./module/types/rook/game/types\";\nexport { GameConfig, MapConfig, InitializationConfig, Params, Game, Map, Tile, Faction, Position, ResourceSet };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Game: {},\n        Params: {},\n        _Structure: {\n            GameConfig: getStructure(GameConfig.fromPartial({})),\n            MapConfig: getStructure(MapConfig.fromPartial({})),\n            InitializationConfig: getStructure(InitializationConfig.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            Game: getStructure(Game.fromPartial({})),\n            Map: getStructure(Map.fromPartial({})),\n            Tile: getStructure(Tile.fromPartial({})),\n            Faction: getStructure(Faction.fromPartial({})),\n            Position: getStructure(Position.fromPartial({})),\n            ResourceSet: getStructure(ResourceSet.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getGame: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Game[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: rook.game initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryGame({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGame(key.id)).data;\n                commit('QUERY', { query: 'Game', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGame', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGame']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGame', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgCreate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMove({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMove(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMove:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMove:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBuild({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBuild(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBuild:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBuild:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMove({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMove(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMove:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMove:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBuild({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBuild(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBuild:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBuild:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var RookDirection;\n(function (RookDirection) {\n    RookDirection[\"LEFT\"] = \"LEFT\";\n    RookDirection[\"RIGHT\"] = \"RIGHT\";\n    RookDirection[\"UP\"] = \"UP\";\n    RookDirection[\"DOWN\"] = \"DOWN\";\n})(RookDirection || (RookDirection = {}));\nexport var RookLandscape;\n(function (RookLandscape) {\n    RookLandscape[\"UNKNOWN\"] = \"UNKNOWN\";\n    RookLandscape[\"PLAINS\"] = \"PLAINS\";\n    RookLandscape[\"FOREST\"] = \"FOREST\";\n    RookLandscape[\"MOUNTAINS\"] = \"MOUNTAINS\";\n    RookLandscape[\"LAKE\"] = \"LAKE\";\n})(RookLandscape || (RookLandscape = {}));\nexport var RookSettlement;\n(function (RookSettlement) {\n    RookSettlement[\"NONE\"] = \"NONE\";\n    RookSettlement[\"TOWN\"] = \"TOWN\";\n    RookSettlement[\"CITY\"] = \"CITY\";\n    RookSettlement[\"CAPITAL\"] = \"CAPITAL\";\n    RookSettlement[\"LUMBERMILL\"] = \"LUMBERMILL\";\n    RookSettlement[\"QUARRY\"] = \"QUARRY\";\n    RookSettlement[\"FARM\"] = \"FARM\";\n    RookSettlement[\"ROOK\"] = \"ROOK\";\n})(RookSettlement || (RookSettlement = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title rook/config.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGame\n         * @summary Queries a game state by id.\n         * @request GET:/rook/game/{id}\n         */\n        this.queryGame = (id, params = {}) => this.request({\n            path: `/rook/game/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @request GET:/rook/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/rook/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgBuild } from \"./types/rook/tx\";\nimport { MsgCreate } from \"./types/rook/tx\";\nimport { MsgMove } from \"./types/rook/tx\";\nconst types = [\n    [\"/cmwaters.rook.rook.MsgBuild\", MsgBuild],\n    [\"/cmwaters.rook.rook.MsgCreate\", MsgCreate],\n    [\"/cmwaters.rook.rook.MsgMove\", MsgMove],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgBuild: (data) => ({ typeUrl: \"/cmwaters.rook.rook.MsgBuild\", value: data }),\n        msgCreate: (data) => ({ typeUrl: \"/cmwaters.rook.rook.MsgCreate\", value: data }),\n        msgMove: (data) => ({ typeUrl: \"/cmwaters.rook.rook.MsgMove\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { GameConfig } from \"./module/types/rook/config\";\nimport { MapConfig } from \"./module/types/rook/config\";\nimport { InitializationConfig } from \"./module/types/rook/config\";\nimport { Params } from \"./module/types/rook/config\";\nimport { Game } from \"./module/types/rook/state\";\nimport { Map } from \"./module/types/rook/types\";\nimport { Tile } from \"./module/types/rook/types\";\nimport { Faction } from \"./module/types/rook/types\";\nimport { Position } from \"./module/types/rook/types\";\nimport { ResourceSet } from \"./module/types/rook/types\";\nexport { GameConfig, MapConfig, InitializationConfig, Params, Game, Map, Tile, Faction, Position, ResourceSet };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Game: {},\n        Params: {},\n        _Structure: {\n            GameConfig: getStructure(GameConfig.fromPartial({})),\n            MapConfig: getStructure(MapConfig.fromPartial({})),\n            InitializationConfig: getStructure(InitializationConfig.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            Game: getStructure(Game.fromPartial({})),\n            Map: getStructure(Map.fromPartial({})),\n            Tile: getStructure(Tile.fromPartial({})),\n            Faction: getStructure(Faction.fromPartial({})),\n            Position: getStructure(Position.fromPartial({})),\n            ResourceSet: getStructure(ResourceSet.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getGame: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Game[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cmwaters.rook.rook initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryGame({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGame(key.id)).data;\n                commit('QUERY', { query: 'Game', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGame', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGame']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGame', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgBuild({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBuild(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBuild:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBuild:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMove({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMove(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMove:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMove:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgBuild({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBuild(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBuild:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBuild:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMove({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMove(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMove:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMove:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nexport { BaseVestingAccount, ContinuousVestingAccount, DelayedVestingAccount, Period, PeriodicVestingAccount };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.vesting.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nexport { TextProposal, Deposit, Proposal, TallyResult, Vote, DepositParams, VotingParams, TallyParams };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.gov.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposals(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVotes(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposits(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/distribution.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: '' };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    }\n};\nconst baseMsgFundCommunityPool = { depositor: '' };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'SetWithdrawAddress', data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawDelegatorReward', data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawValidatorCommission', data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'FundCommunityPool', data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nexport { Params, ValidatorHistoricalRewards, ValidatorCurrentRewards, ValidatorAccumulatedCommission, ValidatorOutstandingRewards, ValidatorSlashEvent, ValidatorSlashEvents, FeePool, CommunityPoolSpendProposal, DelegatorStartingInfo, DelegationDelegatorReward, CommunityPoolSpendProposalWithDeposit, DelegatorWithdrawInfo, ValidatorOutstandingRewardsRecord, ValidatorAccumulatedCommissionRecord, ValidatorHistoricalRewardsRecord, ValidatorCurrentRewardsRecord, DelegatorStartingInfoRecord, ValidatorSlashEventRecord };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.distribution.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorSlashes(key.validator_address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Description, CommissionRates } from '../../../cosmos/staking/v1beta1/staking';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseMsgCreateValidator = {\n    minSelfDelegation: '',\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== '') {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgEditValidator = {\n    validatorAddress: '',\n    commissionRate: '',\n    minSelfDelegation: ''\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== '') {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgDelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    }\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'CreateValidator', data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'EditValidator', data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Delegate', data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'BeginRedelegate', data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Undelegate', data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nexport { LastValidatorPower, HistoricalInfo, CommissionRates, Commission, Description, Validator, ValAddresses, DVPair, DVPairs, DVVTriplet, DVVTriplets, Delegation, UnbondingDelegation, UnbondingDelegationEntry, RedelegationEntry, Redelegation, Params, DelegationResponse, RedelegationEntryResponse, RedelegationResponse, Pool };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.staking.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidators(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRedelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/connection.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nexport { ConnectionEnd, IdentifiedConnection, Counterparty, ClientPaths, ConnectionPaths, Version };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.connection.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnections(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseMsgUnjail = { validatorAddr: '' };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== '') {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request('cosmos.slashing.v1beta1.Msg', 'Unjail', data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nexport { SigningInfo, ValidatorMissedBlocks, MissedBlock, ValidatorSigningInfo, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.slashing.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfos(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/channel.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nexport { Channel, IdentifiedChannel, Counterparty, Packet, PacketState, Acknowledgement, PacketSequence };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.channel.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannels(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionChannels(key.connection, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nexport { Coin, DecCoin, IntProto, DecProto };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nexport { FungibleTokenPacketData, DenomTrace, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.applications.transfer.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTraces(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nexport { TxResponse, ABCIMessageLog, StringEvent, Attribute, GasInfo, Result, SimulationResponse, MsgData, TxMsgData, SearchTxsResult };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.abci.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseSendEnabled = { denom: '', enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    }\n};\nconst baseInput = { address: '' };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseOutput = { address: '' };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDenomUnit = { denom: '', exponent: 0, aliases: '' };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMetadata = { description: '', base: '', display: '' };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== '') {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== '') {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== '') {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Input, Output } from '../../../cosmos/bank/v1beta1/bank';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseMsgSend = { fromAddress: '', toAddress: '' };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    }\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'Send', data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'MultiSend', data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from '../../../cosmos/bank/v1beta1/bank';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBalance = { address: '' };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nexport { Params, SendEnabled, Input, Output, Supply, DenomUnit, Metadata, Balance };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.bank.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllBalances(key.address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomsMetadata(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.crisis.v1beta1';\nconst baseMsgVerifyInvariant = {\n    sender: '',\n    invariantModuleName: '',\n    invariantRoute: ''\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== '') {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== '') {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    }\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.crisis.v1beta1.Msg', 'VerifyInvariant', data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.crisis.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nexport { IdentifiedClientState, ConsensusStateWithHeight, ClientConsensusStates, ClientUpdateProposal, Height, Params, GenesisMetadata, IdentifiedGenesisMetadata };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.client.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientStates(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusStates(key.client_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/evidence.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nexport { Equivocation };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.evidence.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllEvidence(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CmwatersRookRookGame from './cmwaters/rook/rook.game';\nimport CmwatersRookCmwatersRookRook from './cmwaters/rook/cmwaters.rook.rook';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nexport default {\n    CmwatersRookRookGame: load(CmwatersRookRookGame, 'rook.game'),\n    CmwatersRookCmwatersRookRook: load(CmwatersRookCmwatersRookRook, 'cmwaters.rook.rook'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<SpType modulePath=\"cmwaters.rook.rook\" moduleType=\"Position\"  />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=7fdba3cd\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedChannel, PacketState } from '../../../../ibc/core/channel/v1/channel';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    }\n};\nconst basePacketSequence = { portId: '', channelId: '', sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, ValidatorSigningInfo } from '../../../cosmos/slashing/v1beta1/slashing';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSigningInfo = { address: '' };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorMissedBlocks = { address: '' };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { MerklePrefix } from '../../../../ibc/core/commitment/v1/commitment';\nexport const protobufPackage = 'ibc.core.connection.v1';\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseConnectionEnd = { clientId: '', state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseIdentifiedConnection = {\n    id: '',\n    clientId: '',\n    state: 0,\n    delayPeriod: 0\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { clientId: '', connectionId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== '') {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientPaths = { paths: '' };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConnectionPaths = { clientId: '', paths: '' };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersion = { identifier: '', features: '' };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== '') {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin, Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseParams = {\n    communityTax: '',\n    baseProposerReward: '',\n    bonusProposerReward: '',\n    withdrawAddrEnabled: false\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== '') {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== '') {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== '') {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: '' };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== '') {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposal = {\n    title: '',\n    description: '',\n    recipient: ''\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: '',\n    height: 0\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== '') {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseDelegationDelegatorReward = { validatorAddress: '' };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: '',\n    description: '',\n    recipient: '',\n    amount: '',\n    deposit: ''\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== '') {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== '') {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseValidatorSigningInfo = {\n    address: '',\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseMsgSubmitEvidence = { submitter: '' };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== '') {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request('cosmos.evidence.v1beta1.Msg', 'SubmitEvidence', data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin } from '../../../cosmos/base/v1beta1/coin';\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from '../../../cosmos/distribution/v1beta1/distribution';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: '' };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: ''\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: '',\n    period: 0\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: '' };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: '',\n    height: 0,\n    period: 0\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisState = { previousProposer: '' };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== '') {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseMsgCreateVestingAccount = {\n    fromAddress: '',\n    toAddress: '',\n    endTime: 0,\n    delayed: false\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request('cosmos.vesting.v1beta1.Msg', 'CreateVestingAccount', data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Channel, Packet } from '../../../../ibc/core/channel/v1/channel';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseMsgChannelOpenInit = { portId: '', signer: '' };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenTry = {\n    portId: '',\n    previousChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== '') {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenAck = {\n    portId: '',\n    channelId: '',\n    counterpartyChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== '') {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseInit = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgRecvPacket = { signer: '' };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    }\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    }\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    }\n};\nconst baseMsgAcknowledgement = { signer: '' };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenInit', data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenTry', data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenAck', data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenConfirm', data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseInit', data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseConfirm', data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'RecvPacket', data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Timeout', data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'TimeoutOnClose', data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Acknowledgement', data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.auth.v1beta1';\nconst baseBaseAccount = { address: '', accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nconst baseModuleAccount = { name: '', permissions: '' };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'VOTE_OPTION_UNSPECIFIED':\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case 'VOTE_OPTION_YES':\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case 'VOTE_OPTION_ABSTAIN':\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case 'VOTE_OPTION_NO':\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case 'VOTE_OPTION_NO_WITH_VETO':\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return 'VOTE_OPTION_UNSPECIFIED';\n        case VoteOption.VOTE_OPTION_YES:\n            return 'VOTE_OPTION_YES';\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return 'VOTE_OPTION_ABSTAIN';\n        case VoteOption.VOTE_OPTION_NO:\n            return 'VOTE_OPTION_NO';\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return 'VOTE_OPTION_NO_WITH_VETO';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'PROPOSAL_STATUS_UNSPECIFIED':\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case 'PROPOSAL_STATUS_VOTING_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case 'PROPOSAL_STATUS_PASSED':\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case 'PROPOSAL_STATUS_REJECTED':\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case 'PROPOSAL_STATUS_FAILED':\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return 'PROPOSAL_STATUS_UNSPECIFIED';\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return 'PROPOSAL_STATUS_DEPOSIT_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return 'PROPOSAL_STATUS_VOTING_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return 'PROPOSAL_STATUS_PASSED';\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return 'PROPOSAL_STATUS_REJECTED';\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return 'PROPOSAL_STATUS_FAILED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseTextProposal = { title: '', description: '' };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nconst baseDeposit = { proposalId: 0, depositor: '' };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyResult = { yes: '', abstain: '', no: '', noWithVeto: '' };\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== '') {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== '') {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== '') {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== '') {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    }\n};\nconst baseVote = { proposalId: 0, voter: '', option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseFungibleTokenPacketData = {\n    denom: '',\n    amount: 0,\n    sender: '',\n    receiver: ''\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    }\n};\nconst baseDenomTrace = { path: '', baseDenom: '' };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== '') {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    }\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedClientState, ClientConsensusStates, Params } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    }\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseIdentifiedGenesisMetadata = { clientId: '' };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Counterparty, Version } from '../../../../ibc/core/connection/v1/connection';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.connection.v1';\nconst baseMsgConnectionOpenInit = {\n    clientId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: '',\n    previousConnectionId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== '') {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: '',\n    counterpartyConnectionId: '',\n    signer: ''\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== '') {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: '', signer: '' };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenInit', data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenTry', data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenAck', data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenConfirm', data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from '../../../cosmos/staking/v1beta1/staking';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    }\n};\nconst baseLastValidatorPower = { address: '', power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from '../../../../confio/proofs';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.core.commitment.v1';\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePath = { keyPath: '' };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ics23';\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_HASH':\n            return HashOp.NO_HASH;\n        case 1:\n        case 'SHA256':\n            return HashOp.SHA256;\n        case 2:\n        case 'SHA512':\n            return HashOp.SHA512;\n        case 3:\n        case 'KECCAK':\n            return HashOp.KECCAK;\n        case 4:\n        case 'RIPEMD160':\n            return HashOp.RIPEMD160;\n        case 5:\n        case 'BITCOIN':\n            return HashOp.BITCOIN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return 'NO_HASH';\n        case HashOp.SHA256:\n            return 'SHA256';\n        case HashOp.SHA512:\n            return 'SHA512';\n        case HashOp.KECCAK:\n            return 'KECCAK';\n        case HashOp.RIPEMD160:\n            return 'RIPEMD160';\n        case HashOp.BITCOIN:\n            return 'BITCOIN';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_PREFIX':\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case 'VAR_PROTO':\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case 'VAR_RLP':\n            return LengthOp.VAR_RLP;\n        case 3:\n        case 'FIXED32_BIG':\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case 'FIXED32_LITTLE':\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case 'FIXED64_BIG':\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case 'FIXED64_LITTLE':\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case 'REQUIRE_32_BYTES':\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case 'REQUIRE_64_BYTES':\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return 'NO_PREFIX';\n        case LengthOp.VAR_PROTO:\n            return 'VAR_PROTO';\n        case LengthOp.VAR_RLP:\n            return 'VAR_RLP';\n        case LengthOp.FIXED32_BIG:\n            return 'FIXED32_BIG';\n        case LengthOp.FIXED32_LITTLE:\n            return 'FIXED32_LITTLE';\n        case LengthOp.FIXED64_BIG:\n            return 'FIXED64_BIG';\n        case LengthOp.FIXED64_LITTLE:\n            return 'FIXED64_LITTLE';\n        case LengthOp.REQUIRE_32_BYTES:\n            return 'REQUIRE_32_BYTES';\n        case LengthOp.REQUIRE_64_BYTES:\n            return 'REQUIRE_64_BYTES';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch ? BatchProof.toJSON(message.batch) : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    }\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    }\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    }\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { ResourceSet } from '../rook/types';\nexport const protobufPackage = 'cmwaters.rook.rook';\nconst baseGameConfig = {};\nexport const GameConfig = {\n    encode(message, writer = Writer.create()) {\n        if (message.initial !== undefined) {\n            InitializationConfig.encode(message.initial, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.map !== undefined) {\n            MapConfig.encode(message.map, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGameConfig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.initial = InitializationConfig.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.map = MapConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGameConfig };\n        if (object.initial !== undefined && object.initial !== null) {\n            message.initial = InitializationConfig.fromJSON(object.initial);\n        }\n        else {\n            message.initial = undefined;\n        }\n        if (object.map !== undefined && object.map !== null) {\n            message.map = MapConfig.fromJSON(object.map);\n        }\n        else {\n            message.map = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.initial !== undefined && (obj.initial = message.initial ? InitializationConfig.toJSON(message.initial) : undefined);\n        message.map !== undefined && (obj.map = message.map ? MapConfig.toJSON(message.map) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGameConfig };\n        if (object.initial !== undefined && object.initial !== null) {\n            message.initial = InitializationConfig.fromPartial(object.initial);\n        }\n        else {\n            message.initial = undefined;\n        }\n        if (object.map !== undefined && object.map !== null) {\n            message.map = MapConfig.fromPartial(object.map);\n        }\n        else {\n            message.map = undefined;\n        }\n        return message;\n    }\n};\nconst baseMapConfig = { width: 0, height: 0, seed: 0, mountainsDensity: 0, forestDensity: 0, lakeDensity: 0, plainsDensity: 0 };\nexport const MapConfig = {\n    encode(message, writer = Writer.create()) {\n        if (message.width !== 0) {\n            writer.uint32(8).uint32(message.width);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint32(message.height);\n        }\n        if (message.seed !== 0) {\n            writer.uint32(24).int64(message.seed);\n        }\n        if (message.mountainsDensity !== 0) {\n            writer.uint32(32).uint32(message.mountainsDensity);\n        }\n        if (message.forestDensity !== 0) {\n            writer.uint32(40).uint32(message.forestDensity);\n        }\n        if (message.lakeDensity !== 0) {\n            writer.uint32(48).uint32(message.lakeDensity);\n        }\n        if (message.plainsDensity !== 0) {\n            writer.uint32(56).uint32(message.plainsDensity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMapConfig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.width = reader.uint32();\n                    break;\n                case 2:\n                    message.height = reader.uint32();\n                    break;\n                case 3:\n                    message.seed = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.mountainsDensity = reader.uint32();\n                    break;\n                case 5:\n                    message.forestDensity = reader.uint32();\n                    break;\n                case 6:\n                    message.lakeDensity = reader.uint32();\n                    break;\n                case 7:\n                    message.plainsDensity = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMapConfig };\n        if (object.width !== undefined && object.width !== null) {\n            message.width = Number(object.width);\n        }\n        else {\n            message.width = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.seed !== undefined && object.seed !== null) {\n            message.seed = Number(object.seed);\n        }\n        else {\n            message.seed = 0;\n        }\n        if (object.mountainsDensity !== undefined && object.mountainsDensity !== null) {\n            message.mountainsDensity = Number(object.mountainsDensity);\n        }\n        else {\n            message.mountainsDensity = 0;\n        }\n        if (object.forestDensity !== undefined && object.forestDensity !== null) {\n            message.forestDensity = Number(object.forestDensity);\n        }\n        else {\n            message.forestDensity = 0;\n        }\n        if (object.lakeDensity !== undefined && object.lakeDensity !== null) {\n            message.lakeDensity = Number(object.lakeDensity);\n        }\n        else {\n            message.lakeDensity = 0;\n        }\n        if (object.plainsDensity !== undefined && object.plainsDensity !== null) {\n            message.plainsDensity = Number(object.plainsDensity);\n        }\n        else {\n            message.plainsDensity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.width !== undefined && (obj.width = message.width);\n        message.height !== undefined && (obj.height = message.height);\n        message.seed !== undefined && (obj.seed = message.seed);\n        message.mountainsDensity !== undefined && (obj.mountainsDensity = message.mountainsDensity);\n        message.forestDensity !== undefined && (obj.forestDensity = message.forestDensity);\n        message.lakeDensity !== undefined && (obj.lakeDensity = message.lakeDensity);\n        message.plainsDensity !== undefined && (obj.plainsDensity = message.plainsDensity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMapConfig };\n        if (object.width !== undefined && object.width !== null) {\n            message.width = object.width;\n        }\n        else {\n            message.width = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.seed !== undefined && object.seed !== null) {\n            message.seed = object.seed;\n        }\n        else {\n            message.seed = 0;\n        }\n        if (object.mountainsDensity !== undefined && object.mountainsDensity !== null) {\n            message.mountainsDensity = object.mountainsDensity;\n        }\n        else {\n            message.mountainsDensity = 0;\n        }\n        if (object.forestDensity !== undefined && object.forestDensity !== null) {\n            message.forestDensity = object.forestDensity;\n        }\n        else {\n            message.forestDensity = 0;\n        }\n        if (object.lakeDensity !== undefined && object.lakeDensity !== null) {\n            message.lakeDensity = object.lakeDensity;\n        }\n        else {\n            message.lakeDensity = 0;\n        }\n        if (object.plainsDensity !== undefined && object.plainsDensity !== null) {\n            message.plainsDensity = object.plainsDensity;\n        }\n        else {\n            message.plainsDensity = 0;\n        }\n        return message;\n    }\n};\nconst baseInitializationConfig = { teams: 0 };\nexport const InitializationConfig = {\n    encode(message, writer = Writer.create()) {\n        if (message.teams !== 0) {\n            writer.uint32(8).uint32(message.teams);\n        }\n        if (message.resources !== undefined) {\n            ResourceSet.encode(message.resources, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInitializationConfig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.teams = reader.uint32();\n                    break;\n                case 2:\n                    message.resources = ResourceSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInitializationConfig };\n        if (object.teams !== undefined && object.teams !== null) {\n            message.teams = Number(object.teams);\n        }\n        else {\n            message.teams = 0;\n        }\n        if (object.resources !== undefined && object.resources !== null) {\n            message.resources = ResourceSet.fromJSON(object.resources);\n        }\n        else {\n            message.resources = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.teams !== undefined && (obj.teams = message.teams);\n        message.resources !== undefined && (obj.resources = message.resources ? ResourceSet.toJSON(message.resources) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInitializationConfig };\n        if (object.teams !== undefined && object.teams !== null) {\n            message.teams = object.teams;\n        }\n        else {\n            message.teams = 0;\n        }\n        if (object.resources !== undefined && object.resources !== null) {\n            message.resources = ResourceSet.fromPartial(object.resources);\n        }\n        else {\n            message.resources = undefined;\n        }\n        return message;\n    }\n};\nconst baseParams = {};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        Object.entries(message.productionRate).forEach(([key, value]) => {\n            Params_ProductionRateEntry.encode({ key: key, value }, writer.uint32(10).fork()).ldelim();\n        });\n        Object.entries(message.constructionCost).forEach(([key, value]) => {\n            Params_ConstructionCostEntry.encode({ key: key, value }, writer.uint32(18).fork()).ldelim();\n        });\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.productionRate = {};\n        message.constructionCost = {};\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    const entry1 = Params_ProductionRateEntry.decode(reader, reader.uint32());\n                    if (entry1.value !== undefined) {\n                        message.productionRate[entry1.key] = entry1.value;\n                    }\n                    break;\n                case 2:\n                    const entry2 = Params_ConstructionCostEntry.decode(reader, reader.uint32());\n                    if (entry2.value !== undefined) {\n                        message.constructionCost[entry2.key] = entry2.value;\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.productionRate = {};\n        message.constructionCost = {};\n        if (object.productionRate !== undefined && object.productionRate !== null) {\n            Object.entries(object.productionRate).forEach(([key, value]) => {\n                message.productionRate[Number(key)] = ResourceSet.fromJSON(value);\n            });\n        }\n        if (object.constructionCost !== undefined && object.constructionCost !== null) {\n            Object.entries(object.constructionCost).forEach(([key, value]) => {\n                message.constructionCost[Number(key)] = ResourceSet.fromJSON(value);\n            });\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        obj.productionRate = {};\n        if (message.productionRate) {\n            Object.entries(message.productionRate).forEach(([k, v]) => {\n                obj.productionRate[k] = ResourceSet.toJSON(v);\n            });\n        }\n        obj.constructionCost = {};\n        if (message.constructionCost) {\n            Object.entries(message.constructionCost).forEach(([k, v]) => {\n                obj.constructionCost[k] = ResourceSet.toJSON(v);\n            });\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.productionRate = {};\n        message.constructionCost = {};\n        if (object.productionRate !== undefined && object.productionRate !== null) {\n            Object.entries(object.productionRate).forEach(([key, value]) => {\n                if (value !== undefined) {\n                    message.productionRate[Number(key)] = ResourceSet.fromPartial(value);\n                }\n            });\n        }\n        if (object.constructionCost !== undefined && object.constructionCost !== null) {\n            Object.entries(object.constructionCost).forEach(([key, value]) => {\n                if (value !== undefined) {\n                    message.constructionCost[Number(key)] = ResourceSet.fromPartial(value);\n                }\n            });\n        }\n        return message;\n    }\n};\nconst baseParams_ProductionRateEntry = { key: 0 };\nexport const Params_ProductionRateEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== 0) {\n            writer.uint32(8).uint32(message.key);\n        }\n        if (message.value !== undefined) {\n            ResourceSet.encode(message.value, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams_ProductionRateEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.uint32();\n                    break;\n                case 2:\n                    message.value = ResourceSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams_ProductionRateEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = Number(object.key);\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = ResourceSet.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value ? ResourceSet.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams_ProductionRateEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = ResourceSet.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseParams_ConstructionCostEntry = { key: 0 };\nexport const Params_ConstructionCostEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== 0) {\n            writer.uint32(8).uint32(message.key);\n        }\n        if (message.value !== undefined) {\n            ResourceSet.encode(message.value, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams_ConstructionCostEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.uint32();\n                    break;\n                case 2:\n                    message.value = ResourceSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams_ConstructionCostEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = Number(object.key);\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = ResourceSet.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value ? ResourceSet.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams_ConstructionCostEntry };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = 0;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = ResourceSet.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Event } from '../../../../tendermint/abci/types';\nexport const protobufPackage = 'cosmos.base.abci.v1beta1';\nconst baseTxResponse = {\n    height: 0,\n    txhash: '',\n    codespace: '',\n    code: 0,\n    data: '',\n    rawLog: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: ''\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== '') {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== '') {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== '') {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== '') {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    }\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: '' };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseStringEvent = { type: '' };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseAttribute = { key: '', value: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    }\n};\nconst baseResult = { log: '' };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgData = { msgType: '' };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== '') {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Position, directionFromJSON, directionToJSON, settlementFromJSON, settlementToJSON } from '../rook/types';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { GameConfig } from '../rook/config';\nexport const protobufPackage = 'cmwaters.rook.rook';\nconst baseMsgMove = { creator: '', gameId: 0, direction: 0, population: 0 };\nexport const MsgMove = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.gameId !== 0) {\n            writer.uint32(16).uint64(message.gameId);\n        }\n        if (message.position !== undefined) {\n            Position.encode(message.position, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.direction !== 0) {\n            writer.uint32(32).int32(message.direction);\n        }\n        if (message.population !== 0) {\n            writer.uint32(40).uint32(message.population);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMove };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.gameId = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.position = Position.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.direction = reader.int32();\n                    break;\n                case 5:\n                    message.population = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMove };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = Number(object.gameId);\n        }\n        else {\n            message.gameId = 0;\n        }\n        if (object.position !== undefined && object.position !== null) {\n            message.position = Position.fromJSON(object.position);\n        }\n        else {\n            message.position = undefined;\n        }\n        if (object.direction !== undefined && object.direction !== null) {\n            message.direction = directionFromJSON(object.direction);\n        }\n        else {\n            message.direction = 0;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            message.population = Number(object.population);\n        }\n        else {\n            message.population = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.gameId !== undefined && (obj.gameId = message.gameId);\n        message.position !== undefined && (obj.position = message.position ? Position.toJSON(message.position) : undefined);\n        message.direction !== undefined && (obj.direction = directionToJSON(message.direction));\n        message.population !== undefined && (obj.population = message.population);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMove };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = object.gameId;\n        }\n        else {\n            message.gameId = 0;\n        }\n        if (object.position !== undefined && object.position !== null) {\n            message.position = Position.fromPartial(object.position);\n        }\n        else {\n            message.position = undefined;\n        }\n        if (object.direction !== undefined && object.direction !== null) {\n            message.direction = object.direction;\n        }\n        else {\n            message.direction = 0;\n        }\n        if (object.population !== undefined && object.population !== null) {\n            message.population = object.population;\n        }\n        else {\n            message.population = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMoveResponse = {};\nexport const MsgMoveResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMoveResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMoveResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMoveResponse };\n        return message;\n    }\n};\nconst baseMsgBuild = { creator: '', gameId: 0, settlement: 0 };\nexport const MsgBuild = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.gameId !== 0) {\n            writer.uint32(16).uint64(message.gameId);\n        }\n        if (message.settlement !== 0) {\n            writer.uint32(24).int32(message.settlement);\n        }\n        if (message.position !== undefined) {\n            Position.encode(message.position, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBuild };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.gameId = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.settlement = reader.int32();\n                    break;\n                case 4:\n                    message.position = Position.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBuild };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = Number(object.gameId);\n        }\n        else {\n            message.gameId = 0;\n        }\n        if (object.settlement !== undefined && object.settlement !== null) {\n            message.settlement = settlementFromJSON(object.settlement);\n        }\n        else {\n            message.settlement = 0;\n        }\n        if (object.position !== undefined && object.position !== null) {\n            message.position = Position.fromJSON(object.position);\n        }\n        else {\n            message.position = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.gameId !== undefined && (obj.gameId = message.gameId);\n        message.settlement !== undefined && (obj.settlement = settlementToJSON(message.settlement));\n        message.position !== undefined && (obj.position = message.position ? Position.toJSON(message.position) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBuild };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = object.gameId;\n        }\n        else {\n            message.gameId = 0;\n        }\n        if (object.settlement !== undefined && object.settlement !== null) {\n            message.settlement = object.settlement;\n        }\n        else {\n            message.settlement = 0;\n        }\n        if (object.position !== undefined && object.position !== null) {\n            message.position = Position.fromPartial(object.position);\n        }\n        else {\n            message.position = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBuildResponse = {};\nexport const MsgBuildResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBuildResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBuildResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBuildResponse };\n        return message;\n    }\n};\nconst baseMsgCreate = { players: '' };\nexport const MsgCreate = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.players) {\n            writer.uint32(18).string(v);\n        }\n        if (message.config !== undefined) {\n            GameConfig.encode(message.config, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreate };\n        message.players = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.players.push(reader.string());\n                    break;\n                case 3:\n                    message.config = GameConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreate };\n        message.players = [];\n        if (object.players !== undefined && object.players !== null) {\n            for (const e of object.players) {\n                message.players.push(String(e));\n            }\n        }\n        if (object.config !== undefined && object.config !== null) {\n            message.config = GameConfig.fromJSON(object.config);\n        }\n        else {\n            message.config = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.players) {\n            obj.players = message.players.map((e) => e);\n        }\n        else {\n            obj.players = [];\n        }\n        message.config !== undefined && (obj.config = message.config ? GameConfig.toJSON(message.config) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreate };\n        message.players = [];\n        if (object.players !== undefined && object.players !== null) {\n            for (const e of object.players) {\n                message.players.push(e);\n            }\n        }\n        if (object.config !== undefined && object.config !== null) {\n            message.config = GameConfig.fromPartial(object.config);\n        }\n        else {\n            message.config = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateResponse = { gameId: 0 };\nexport const MsgCreateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gameId !== 0) {\n            writer.uint32(8).uint64(message.gameId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gameId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateResponse };\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = Number(object.gameId);\n        }\n        else {\n            message.gameId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gameId !== undefined && (obj.gameId = message.gameId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateResponse };\n        if (object.gameId !== undefined && object.gameId !== null) {\n            message.gameId = object.gameId;\n        }\n        else {\n            message.gameId = 0;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Move(request) {\n        const data = MsgMove.encode(request).finish();\n        const promise = this.rpc.request('cmwaters.rook.rook.Msg', 'Move', data);\n        return promise.then((data) => MsgMoveResponse.decode(new Reader(data)));\n    }\n    Build(request) {\n        const data = MsgBuild.encode(request).finish();\n        const promise = this.rpc.request('cmwaters.rook.rook.Msg', 'Build', data);\n        return promise.then((data) => MsgBuildResponse.decode(new Reader(data)));\n    }\n    Create(request) {\n        const data = MsgCreate.encode(request).finish();\n        const promise = this.rpc.request('cmwaters.rook.rook.Msg', 'Create', data);\n        return promise.then((data) => MsgCreateResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../../cosmos/base/v1beta1/coin';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseMsgTransfer = {\n    sourcePort: '',\n    sourceChannel: '',\n    sender: '',\n    receiver: '',\n    timeoutTimestamp: 0\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request('ibc.applications.transfer.v1.Msg', 'Transfer', data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON } from '../../../cosmos/gov/v1beta1/gov';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\nconst baseMsgSubmitProposal = { proposer: '' };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== '') {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVote = { proposalId: 0, voter: '', option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    }\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: '' };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'SubmitProposal', data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Vote', data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Deposit', data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n"],"sourceRoot":""}