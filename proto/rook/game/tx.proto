syntax = "proto3";
package rook.game;

import "rook/game/game.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/cmwaters/rook/x/game/types";

// Msg defines the Msg service.
service Msg {
  rpc Move(MsgMove) returns (MsgMoveResponse);
  rpc Build(MsgBuild) returns (MsgBuildResponse);
  rpc Create(MsgCreate) returns (MsgCreateResponse);
  rpc ChangeParams(MsgChangeParams) returns (MsgChangeParamsResponse);
}

message MsgMove {
  string creator = 1;
  uint64 game_id = 2;
  uint32 populace = 3;
  Direction direction = 4;
  uint32 population = 5;
}

message MsgMoveResponse {
}

message MsgBuild {
  string creator = 1;
  uint64 game_id = 2;
  uint32 populace = 3;
  Settlement settlement = 4;
}

message MsgBuildResponse {
}

message MsgCreate {
  repeated string players = 2; // all players must be signers
  Config config = 3;
}

message MsgCreateResponse {
  uint64 game_id = 1; 
}

message MsgChangeParams {
  string authority = 1;
  Params params = 2 [(gogoproto.nullable) = false];
}

message MsgChangeParamsResponse {
  uint32 version = 1;
}
